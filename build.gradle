plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'
    id 'io.qameta.allure' version '2.8.1'
}

group = 'com.ricardorlg.devicefarm'
version = '1.0-SNAPSHOT'

def arrow_version = "0.11.0"
def kotest_version = "4.3.2"

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
}
dependencies {
    implementation platform('software.amazon.awssdk:bom:2.15.31')
    implementation 'software.amazon.awssdk:devicefarm'
    implementation "io.arrow-kt:arrow-fx-coroutines:$arrow_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    implementation "io.github.microutils:kotlin-logging:2.0.3"
    implementation "org.slf4j:slf4j-simple:1.7.29"
    implementation group: "org.http4k", name: "http4k-core", version: "3.283.1"

    testImplementation "io.mockk:mockk:1.10.2"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-arrow-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-extensions-allure:$kotest_version"

}
allure {
    autoconfigure = false
    version = "2.13.8"
}

jar {
    manifest {
        attributes("Implementation-Title": "Device Farm Tractor",
                "Implementation-Version": project.version.toString())
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.time.ExperimentalTime","-Xuse-experimental=kotlin.io.path.ExperimentalPathApi"]
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
    systemProperty("kotest.framework.parallelism", System.getProperty("kotest.framework.parallelism","1"))
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


