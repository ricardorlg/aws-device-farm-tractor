{
  "It should return a DeviceFarmTractorError if something happens fetching device farm projects" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "41767f43b9858cba",
      "status" : "passed",
      "time" : {
        "start" : 1610733191761,
        "stop" : 1610733191803,
        "duration" : 42
      }
    } ]
  },
  "When IOS upload type is used, and file does not have .ipa extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "66197f07b1254e4e",
      "status" : "passed",
      "time" : {
        "start" : 1610733191826,
        "stop" : 1610733191831,
        "duration" : 5
      }
    } ]
  },
  "When running a test in device farm it should use the correct Project ARN in the process" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5f2345e22122093a",
      "status" : "passed",
      "time" : {
        "start" : 1610733194158,
        "stop" : 1610733194225,
        "duration" : 67
      }
    } ]
  },
  "It should return the device pool that has the provided name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f3f44bf6c1382bf4",
      "status" : "passed",
      "time" : {
        "start" : 1610733191677,
        "stop" : 1610733191736,
        "duration" : 59
      }
    } ]
  },
  "When fetching device pools from AWS device farm, project ARN is mandatory, a left should be returned if it is not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e67063249c10fabb",
      "status" : "passed",
      "time" : {
        "start" : 1610733196086,
        "stop" : 1610733196181,
        "duration" : 95
      }
    } ]
  },
  "When an error happens fetching the logger then info messages should be redirect to stdout" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a3e4537443c9eba3",
      "status" : "passed",
      "time" : {
        "start" : 1610733193325,
        "stop" : 1610733196032,
        "duration" : 2707
      }
    } ]
  },
  "When sessionToken is provided but no credentials, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "68d8a2f6680ffcc9",
      "status" : "passed",
      "time" : {
        "start" : 1610733198039,
        "stop" : 1610733198059,
        "duration" : 20
      }
    } ]
  },
  "It should not try to download the reports when an error happens fetching the associated jobs of the test run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "dcd0363c6bb2b875",
      "status" : "passed",
      "time" : {
        "start" : 1610733192009,
        "stop" : 1610733192015,
        "duration" : 6
      }
    } ]
  },
  "When deleting an Upload it should return a DeleteUploadResponse as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cf0a25183170aaa1",
      "status" : "passed",
      "time" : {
        "start" : 1610733197333,
        "stop" : 1610733197668,
        "duration" : 335
      }
    } ]
  },
  "When creating a project in AWS device farm, if project name is empty an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9925ab411c619029",
      "status" : "passed",
      "time" : {
        "start" : 1610733196942,
        "stop" : 1610733197068,
        "duration" : 126
      }
    } ]
  },
  "When creating AWS device farm upload, project ARN is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "18c05a550d42dae8",
      "status" : "passed",
      "time" : {
        "start" : 1610733196241,
        "stop" : 1610733196331,
        "duration" : 90
      }
    } ]
  },
  "When an error happens, it should return the exception wrapped as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3952ad4936fadbfd",
      "status" : "passed",
      "time" : {
        "start" : 1610733198358,
        "stop" : 1610733198386,
        "duration" : 28
      }
    } ]
  },
  "When accessKeyId, secretAccessKey, session token and region name are provided, it should return a runner that uses a device farm client with basic credentials, the session token and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a6fbbf1c6569372c",
      "status" : "passed",
      "time" : {
        "start" : 1610733198280,
        "stop" : 1610733198336,
        "duration" : 56
      }
    } ]
  },
  "It should return the executed run when the execution is completed" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6d05e77c8150c9d6",
      "status" : "passed",
      "time" : {
        "start" : 1610733191344,
        "stop" : 1610733191562,
        "duration" : 218
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching current run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "15d42fa3fa225551",
      "status" : "passed",
      "time" : {
        "start" : 1610733191874,
        "stop" : 1610733191891,
        "duration" : 17
      }
    } ]
  },
  "When no path is provided an Illegal Argument error should be returnes as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "89eefe50bf667942",
      "status" : "passed",
      "time" : {
        "start" : 1610733191983,
        "stop" : 1610733191998,
        "duration" : 15
      }
    } ]
  },
  "It should log an error message when downloading a report fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d08a00c935c69f0b",
      "status" : "passed",
      "time" : {
        "start" : 1610733191884,
        "stop" : 1610733191930,
        "duration" : 46
      }
    } ]
  },
  "It should delete uploads in parallel and keep deleting even if some operation fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2704da51acee59ac",
      "status" : "passed",
      "time" : {
        "start" : 1610733191651,
        "stop" : 1610733191791,
        "duration" : 140
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return an error as a left if upload ARN is empty" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5d2d566e0e981443",
      "status" : "passed",
      "time" : {
        "start" : 1610733197060,
        "stop" : 1610733197211,
        "duration" : 151
      }
    } ]
  },
  "When Android upload type is used, and file does not have .apk extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9c2b11a38d4903f8",
      "status" : "passed",
      "time" : {
        "start" : 1610733191676,
        "stop" : 1610733191795,
        "duration" : 119
      }
    } ]
  },
  "When creating a project in AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c9b3e87b4af75eab",
      "status" : "passed",
      "time" : {
        "start" : 1610733196545,
        "stop" : 1610733196941,
        "duration" : 396
      }
    } ]
  },
  "When running a test in device farm it should return the result" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f982dbd38f976227",
      "status" : "passed",
      "time" : {
        "start" : 1610733194128,
        "stop" : 1610733194155,
        "duration" : 27
      }
    } ]
  },
  "When scheduling a run, it should return the run as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3bd04ca2d94baa15",
      "status" : "passed",
      "time" : {
        "start" : 1610733195229,
        "stop" : 1610733195963,
        "duration" : 734
      }
    } ]
  },
  "When a run name is provided it should be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4786d60cf70fe98f",
      "status" : "passed",
      "time" : {
        "start" : 1610733195975,
        "stop" : 1610733196048,
        "duration" : 73
      }
    } ]
  },
  "It should return the first found device pool as default when no name is provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bd4bfee0b1f3593f",
      "status" : "passed",
      "time" : {
        "start" : 1610733191343,
        "stop" : 1610733191502,
        "duration" : 159
      }
    } ]
  },
  "When Android upload type is used, file must end with .apk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "276e9f5fc1e8c5e7",
      "status" : "passed",
      "time" : {
        "start" : 1610733191344,
        "stop" : 1610733191416,
        "duration" : 72
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the run handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7c317ff8c22ab817",
      "status" : "passed",
      "time" : {
        "start" : 1610733194592,
        "stop" : 1610733194628,
        "duration" : 36
      }
    } ]
  },
  "It should return the upload, if its ready to be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "619c796d93994a41",
      "status" : "passed",
      "time" : {
        "start" : 1610733191345,
        "stop" : 1610733191589,
        "duration" : 244
      }
    } ]
  },
  "When fetching the artifacts of a test execution any error should be returned as a DeviceFarmTractorError left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c833c8864db5a6af",
      "status" : "passed",
      "time" : {
        "start" : 1610733196085,
        "stop" : 1610733196239,
        "duration" : 154
      }
    } ]
  },
  "info messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2a81c6530807abb2",
      "status" : "passed",
      "time" : {
        "start" : 1610733196223,
        "stop" : 1610733196507,
        "duration" : 284
      }
    } ]
  },
  "When fetching a RUN it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "554bffa25e4965bf",
      "status" : "passed",
      "time" : {
        "start" : 1610733196522,
        "stop" : 1610733196936,
        "duration" : 414
      }
    } ]
  },
  "When an error happens fetching the logger then error messages should be redirect to stderr" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a0f5bf079b79776c",
      "status" : "passed",
      "time" : {
        "start" : 1610733196651,
        "stop" : 1610733197039,
        "duration" : 388
      }
    } ]
  },
  "When accessKeyId and secretAccessKey are provided, it should return a runner that uses a device farm client with basic credentials" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d19424bc2ff80a5c",
      "status" : "passed",
      "time" : {
        "start" : 1610733198063,
        "stop" : 1610733198085,
        "duration" : 22
      }
    } ]
  },
  "It should log an error message when creating the test report directory of an specific device fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1ca2ef286dd32667",
      "status" : "passed",
      "time" : {
        "start" : 1610733191965,
        "stop" : 1610733191992,
        "duration" : 27
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e740d1078a41e1c9",
      "status" : "passed",
      "time" : {
        "start" : 1610733194539,
        "stop" : 1610733194562,
        "duration" : 23
      }
    } ]
  },
  "When running a test in device farm it should have APPIUM NODE as test type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f399b7546b0cb6aa",
      "status" : "passed",
      "time" : {
        "start" : 1610733194289,
        "stop" : 1610733194302,
        "duration" : 13
      }
    } ]
  },
  "When loading a file from a given path, if the files doesn't exists an error should be returned as a Left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "494a46c991fe9a18",
      "status" : "passed",
      "time" : {
        "start" : 1610733191942,
        "stop" : 1610733191980,
        "duration" : 38
      }
    } ]
  },
  "When no run ARN is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "12c16fac6f5cacd4",
      "status" : "passed",
      "time" : {
        "start" : 1610733196939,
        "stop" : 1610733197060,
        "duration" : 121
      }
    } ]
  },
  "When fetching projects from AWS, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6e4049c0dcd5afa9",
      "status" : "passed",
      "time" : {
        "start" : 1610733196238,
        "stop" : 1610733196333,
        "duration" : 95
      }
    } ]
  },
  "When only accessKeyId is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f40941a86724b928",
      "status" : "passed",
      "time" : {
        "start" : 1610733197979,
        "stop" : 1610733198013,
        "duration" : 34
      }
    } ]
  },
  "When running a test in device farm it should try to delete the uploads of the execution by default" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "21d8310a131358ee",
      "status" : "passed",
      "time" : {
        "start" : 1610733194454,
        "stop" : 1610733194500,
        "duration" : 46
      }
    } ]
  },
  "It should wait until the execution completes" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "edf9a52443c36362",
      "status" : "passed",
      "time" : {
        "start" : 1610733191659,
        "stop" : 1610733191864,
        "duration" : 205
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when creating the upload fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "91bcc2e85fdc9ce1",
      "status" : "passed",
      "time" : {
        "start" : 1610733192064,
        "stop" : 1610733192087,
        "duration" : 23
      }
    } ]
  },
  "When fetching the artifacts of a test execution if no run arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "449263568acd6fa0",
      "status" : "passed",
      "time" : {
        "start" : 1610733196240,
        "stop" : 1610733196297,
        "duration" : 57
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler and the parallel upload process should be cancelled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "88c5b34bb0d9f33e",
      "status" : "passed",
      "time" : {
        "start" : 1610733194568,
        "stop" : 1610733194590,
        "duration" : 22
      }
    } ]
  },
  "It should return the last DeviceFarmTractorError returned when fetching upload is still failing after the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8d140fdb31f84580",
      "status" : "passed",
      "time" : {
        "start" : 1610733191916,
        "stop" : 1610733191954,
        "duration" : 38
      }
    } ]
  },
  "It should return an ErrorDownloadingArtifact when there is a problem saving the artifact on disk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3c38d7dfff7df9",
      "status" : "passed",
      "time" : {
        "start" : 1610733191680,
        "stop" : 1610733191814,
        "duration" : 134
      }
    } ]
  },
  "It should keep fetching upload status even if an error happens in a a retry" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "64b86559808e64c3",
      "status" : "passed",
      "time" : {
        "start" : 1610733192042,
        "stop" : 1610733192062,
        "duration" : 20
      }
    } ]
  },
  "When basic credentials and sessionToken are provided, it should return a runner that uses a device farm client with the basic credentials and session token" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8242d18d1c0730e6",
      "status" : "passed",
      "time" : {
        "start" : 1610733198103,
        "stop" : 1610733198111,
        "duration" : 8
      }
    } ]
  },
  "When fetching the artifacts of a test execution it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "80b234a6e7983ada",
      "status" : "passed",
      "time" : {
        "start" : 1610733194728,
        "stop" : 1610733196068,
        "duration" : 1340
      }
    } ]
  },
  "When no app arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b39c0b61b3d080e0",
      "status" : "passed",
      "time" : {
        "start" : 1610733196084,
        "stop" : 1610733196230,
        "duration" : 146
      }
    } ]
  },
  "When running a test in device farm if no run name is provided it should create the name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ac354cdb7dfae76b",
      "status" : "passed",
      "time" : {
        "start" : 1610733194337,
        "stop" : 1610733194398,
        "duration" : 61
      }
    } ]
  },
  "error messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "943b3f1f10d2827b",
      "status" : "passed",
      "time" : {
        "start" : 1610733197211,
        "stop" : 1610733197549,
        "duration" : 338
      }
    } ]
  },
  "When an error happens scheduling the run, it should return an ErrorSchedulingRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c64fd7754f387288",
      "status" : "passed",
      "time" : {
        "start" : 1610733196345,
        "stop" : 1610733196520,
        "duration" : 175
      }
    } ]
  },
  "When running a test in device farm by default the capture video configuration should be enabled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7b7f5bae69200706",
      "status" : "passed",
      "time" : {
        "start" : 1610733194233,
        "stop" : 1610733194245,
        "duration" : 12
      }
    } ]
  },
  "It should download all the reports associated to the test Run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "eda3225840dd5c3f",
      "status" : "passed",
      "time" : {
        "start" : 1610733191841,
        "stop" : 1610733191882,
        "duration" : 41
      }
    } ]
  },
  "When creating a runner without credentials and region, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "df2340463a25a133",
      "status" : "passed",
      "time" : {
        "start" : 1610733195943,
        "stop" : 1610733197952,
        "duration" : 2009
      }
    } ]
  },
  "When fetching an AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8fff21949eb5e122",
      "status" : "passed",
      "time" : {
        "start" : 1610733197229,
        "stop" : 1610733197331,
        "duration" : 102
      }
    } ]
  },
  "When fetching device pools from AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b271c01650d952d8",
      "status" : "passed",
      "time" : {
        "start" : 1610733196239,
        "stop" : 1610733196330,
        "duration" : 91
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when uploading the artifact to s3 fails, no matters the upload status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ea8eee4ebf83352d",
      "status" : "passed",
      "time" : {
        "start" : 1610733191959,
        "stop" : 1610733192039,
        "duration" : 80
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when scheduling the run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ad3de99e8964432c",
      "status" : "passed",
      "time" : {
        "start" : 1610733191893,
        "stop" : 1610733191905,
        "duration" : 12
      }
    } ]
  },
  "When creating AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "411648360437d356",
      "status" : "passed",
      "time" : {
        "start" : 1610733196083,
        "stop" : 1610733196229,
        "duration" : 146
      }
    } ]
  },
  "It should return a project if its found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e7dae57e3d54878e",
      "status" : "passed",
      "time" : {
        "start" : 1610733191343,
        "stop" : 1610733191500,
        "duration" : 157
      }
    } ]
  },
  "It should return an UploadFailureError, if the upload status is not succeeded before the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2a5fe29b00dad584",
      "status" : "passed",
      "time" : {
        "start" : 1610733191827,
        "stop" : 1610733191913,
        "duration" : 86
      }
    } ]
  },
  "When deleting an Upload if no arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7c8cd1e13d045ba0",
      "status" : "passed",
      "time" : {
        "start" : 1610733197718,
        "stop" : 1610733197780,
        "duration" : 62
      }
    } ]
  },
  "When IOS upload type is used, file must end with .ipa" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "754efcf19b976479",
      "status" : "passed",
      "time" : {
        "start" : 1610733191798,
        "stop" : 1610733191823,
        "duration" : 25
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the devices pool handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b1721b7dcf6354c4",
      "status" : "passed",
      "time" : {
        "start" : 1610733194515,
        "stop" : 1610733194536,
        "duration" : 21
      }
    } ]
  },
  "It should return a DevicePoolNotFoundError when a device pool is not found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ba3f9c9c502a254d",
      "status" : "passed",
      "time" : {
        "start" : 1610733191800,
        "stop" : 1610733191808,
        "duration" : 8
      }
    } ]
  },
  "When running a test in device farm if the base test report directory path is empty it should not download the results" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2f299eae159bd3e",
      "status" : "passed",
      "time" : {
        "start" : 1610733194401,
        "stop" : 1610733194434,
        "duration" : 33
      }
    } ]
  },
  "When uploading artifact to S3, it should return a right when upload result has OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4ddee50608e31d1c",
      "status" : "passed",
      "time" : {
        "start" : 1610733196525,
        "stop" : 1610733196652,
        "duration" : 127
      }
    } ]
  },
  "When running a test in device farm the capture video configuration should be able to be specified" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "864fc9d119a58970",
      "status" : "passed",
      "time" : {
        "start" : 1610733194255,
        "stop" : 1610733194286,
        "duration" : 31
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens fetching the associated device pools of the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "28d452b2cd1471ad",
      "status" : "passed",
      "time" : {
        "start" : 1610733191831,
        "stop" : 1610733191852,
        "duration" : 21
      }
    } ]
  },
  "When deleting an Upload any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2c1fe9597aedcc11",
      "status" : "passed",
      "time" : {
        "start" : 1610733197684,
        "stop" : 1610733197701,
        "duration" : 17
      }
    } ]
  },
  "When uploading artifact to S3, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8a677b91a4d1a9bb",
      "status" : "passed",
      "time" : {
        "start" : 1610733196716,
        "stop" : 1610733196738,
        "duration" : 22
      }
    } ]
  },
  "It should download all the reports even if any of them fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "162182cd7c055750",
      "status" : "passed",
      "time" : {
        "start" : 1610733191933,
        "stop" : 1610733191960,
        "duration" : 27
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the projects handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7af383708bb4b78",
      "status" : "passed",
      "time" : {
        "start" : 1610733194503,
        "stop" : 1610733194511,
        "duration" : 8
      }
    } ]
  },
  "When running a test in device farm it should use the test project uploaded and the test spec provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b989bb1ccc3f02bc",
      "status" : "passed",
      "time" : {
        "start" : 1610733194305,
        "stop" : 1610733194317,
        "duration" : 12
      }
    } ]
  },
  "When running a test in device farm if the base test report directory is provided it should use it as a path" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6ed73e91f7d70e82",
      "status" : "passed",
      "time" : {
        "start" : 1610733194437,
        "stop" : 1610733194452,
        "duration" : 15
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching artifacts fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d08cae1a22e90679",
      "status" : "passed",
      "time" : {
        "start" : 1610733191830,
        "stop" : 1610733191837,
        "duration" : 7
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, the file must have .zip extension" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c102c33e2453c6d5",
      "status" : "passed",
      "time" : {
        "start" : 1610733191872,
        "stop" : 1610733191899,
        "duration" : 27
      }
    } ]
  },
  "When an error happens fetching the associated jobs of a Run then it should return a ErrorListingAssociatedJobs as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8b6730f8ba8506ab",
      "status" : "passed",
      "time" : {
        "start" : 1610733197471,
        "stop" : 1610733197659,
        "duration" : 188
      }
    } ]
  },
  "It should return a NoRegisteredDevicePoolsError when there is no device pools associated to the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bf335ba76f15a913",
      "status" : "passed",
      "time" : {
        "start" : 1610733191742,
        "stop" : 1610733191794,
        "duration" : 52
      }
    } ]
  },
  "When only secretAccessKey is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e20fd0aff442d6b8",
      "status" : "passed",
      "time" : {
        "start" : 1610733198017,
        "stop" : 1610733198024,
        "duration" : 7
      }
    } ]
  },
  "It should delete all the provided uploads" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "349bca89af4696c9",
      "status" : "passed",
      "time" : {
        "start" : 1610733191346,
        "stop" : 1610733191620,
        "duration" : 274
      }
    } ]
  },
  "When creating a runner without credentials but with region, it should return a runner that uses a device farm client with default configuration but that use the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c0df956b440f5487",
      "status" : "passed",
      "time" : {
        "start" : 1610733198115,
        "stop" : 1610733198140,
        "duration" : 25
      }
    } ]
  },
  "When accessKeyId, secretAccessKey and region name are provided, it should return a runner that uses a device farm client with basic credentials and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "593d32b6f733bed9",
      "status" : "passed",
      "time" : {
        "start" : 1610733198142,
        "stop" : 1610733198276,
        "duration" : 134
      }
    } ]
  },
  "When uploading artifact to S3, it should return a left when upload result has not OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4c73ca270b993e6",
      "status" : "passed",
      "time" : {
        "start" : 1610733196655,
        "stop" : 1610733196712,
        "duration" : 57
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, file must end with .yml" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "da6151068f97a1d4",
      "status" : "passed",
      "time" : {
        "start" : 1610733191834,
        "stop" : 1610733191850,
        "duration" : 16
      }
    } ]
  },
  "When an error happens fetching a run it should return a ErrorFetchingAWSRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "94687a7cd605c07",
      "status" : "passed",
      "time" : {
        "start" : 1610733197061,
        "stop" : 1610733197222,
        "duration" : 161
      }
    } ]
  },
  "When unknown Upload type is used, an error should be returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cd3bc8562baf697",
      "status" : "passed",
      "time" : {
        "start" : 1610733191908,
        "stop" : 1610733191919,
        "duration" : 11
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return the upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2daf4927952efee2",
      "status" : "passed",
      "time" : {
        "start" : 1610733196740,
        "stop" : 1610733197039,
        "duration" : 299
      }
    } ]
  },
  "When deleting an Upload if non-200 response is received then an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "df889c048cd9ea8",
      "status" : "passed",
      "time" : {
        "start" : 1610733197703,
        "stop" : 1610733197715,
        "duration" : 12
      }
    } ]
  },
  "When creating a project in AWS device farm, it should return the created project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4ef8d8c5c17dd078",
      "status" : "passed",
      "time" : {
        "start" : 1610733196335,
        "stop" : 1610733196527,
        "duration" : 192
      }
    } ]
  },
  "It should download the customer artifact of a job execution" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7f354915b090cba5",
      "status" : "passed",
      "time" : {
        "start" : 1610733191347,
        "stop" : 1610733191677,
        "duration" : 330
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when the artifact to upload doesn't exists" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b175c19628dee200",
      "status" : "passed",
      "time" : {
        "start" : 1610733192114,
        "stop" : 1610733192139,
        "duration" : 25
      }
    } ]
  },
  "When no project arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f4ae8b0412ecece6",
      "status" : "passed",
      "time" : {
        "start" : 1610733196332,
        "stop" : 1610733196344,
        "duration" : 12
      }
    } ]
  },
  "It should never try to delete when no uploads are provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ed437f19cd830709",
      "status" : "passed",
      "time" : {
        "start" : 1610733191802,
        "stop" : 1610733191806,
        "duration" : 4
      }
    } ]
  },
  "When running a test in device farm it should use the correct paths for the different upload types" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c5f2d69a14a2be9d",
      "status" : "passed",
      "time" : {
        "start" : 1610733194320,
        "stop" : 1610733194334,
        "duration" : 14
      }
    } ]
  },
  "When creating AWS device farm upload, artifact name is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6907ae7120c789dc",
      "status" : "passed",
      "time" : {
        "start" : 1610733196333,
        "stop" : 1610733196504,
        "duration" : 171
      }
    } ]
  },
  "It should return an UploadFailureError if the upload status is not succeeded" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3d33bba3687b32c",
      "status" : "passed",
      "time" : {
        "start" : 1610733191676,
        "stop" : 1610733191811,
        "duration" : 135
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens creating a new project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f29fe7dca5bc5f7a",
      "status" : "passed",
      "time" : {
        "start" : 1610733191805,
        "stop" : 1610733191863,
        "duration" : 58
      }
    } ]
  },
  "It should create the project if it is no found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ab5daf37632cbb6",
      "status" : "passed",
      "time" : {
        "start" : 1610733191674,
        "stop" : 1610733191758,
        "duration" : 84
      }
    } ]
  },
  "When fetching device pools from AWS device farm, it should return the associated device pools of a given project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "68421ae4af2df5ba",
      "status" : "passed",
      "time" : {
        "start" : 1610733195242,
        "stop" : 1610733196070,
        "duration" : 828
      }
    } ]
  },
  "When fetching projects from AWS, it should return the project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "53c32e1d86dfb2df",
      "status" : "passed",
      "time" : {
        "start" : 1610733195242,
        "stop" : 1610733196236,
        "duration" : 994
      }
    } ]
  },
  "When no device pool arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6dd3be8a870c9acb",
      "status" : "passed",
      "time" : {
        "start" : 1610733196240,
        "stop" : 1610733196298,
        "duration" : 58
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, and file does not have .zip extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1df5004df1e94750",
      "status" : "passed",
      "time" : {
        "start" : 1610733191902,
        "stop" : 1610733191906,
        "duration" : 4
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, and file does not have .yml extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4718dfa9f3a77976",
      "status" : "passed",
      "time" : {
        "start" : 1610733191852,
        "stop" : 1610733191862,
        "duration" : 10
      }
    } ]
  },
  "When fetching all the jobs associated to a Run it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4a9eea00a1d2eb6b",
      "status" : "passed",
      "time" : {
        "start" : 1610733197224,
        "stop" : 1610733197437,
        "duration" : 213
      }
    } ]
  },
  "It should not fail if there is no customer artifacts to download" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "eb6436c6b2f774a6",
      "status" : "passed",
      "time" : {
        "start" : 1610733191816,
        "stop" : 1610733191819,
        "duration" : 3
      }
    } ]
  },
  "It should return a DeviceFarmIllegalArtifactExtension when the upload file doesn't satisfy the upload type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "75eb484ae88a6811",
      "status" : "passed",
      "time" : {
        "start" : 1610733192095,
        "stop" : 1610733192112,
        "duration" : 17
      }
    } ]
  },
  "When creating AWS device farm upload, tt should return the created AWS Upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "14318884fb178e77",
      "status" : "passed",
      "time" : {
        "start" : 1610733195246,
        "stop" : 1610733196030,
        "duration" : 784
      }
    } ]
  },
  "It should log an error message when creating the test reports directory fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d2ca652d1080c758",
      "status" : "passed",
      "time" : {
        "start" : 1610733191996,
        "stop" : 1610733192003,
        "duration" : 7
      }
    } ]
  },
  "When loading a file from a given path, it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a7b34ed1ce3d6965",
      "status" : "passed",
      "time" : {
        "start" : 1610733191924,
        "stop" : 1610733191938,
        "duration" : 14
      }
    } ]
  }
}