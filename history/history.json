{
  "It should return a DeviceFarmTractorError if something happens fetching device farm projects" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4a0406f389eb77f7",
      "status" : "passed",
      "time" : {
        "start" : 1610685110641,
        "stop" : 1610685110697,
        "duration" : 56
      }
    } ]
  },
  "When IOS upload type is used, and file does not have .ipa extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cfdcba391f1d7e24",
      "status" : "passed",
      "time" : {
        "start" : 1610685110609,
        "stop" : 1610685110620,
        "duration" : 11
      }
    } ]
  },
  "When running a test in device farm it should use the correct Project ARN in the process" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "278e76d496f6c23c",
      "status" : "passed",
      "time" : {
        "start" : 1610685113005,
        "stop" : 1610685113063,
        "duration" : 58
      }
    } ]
  },
  "When fetching device pools from AWS device farm, project ARN is mandatory, a left should be returned if it is not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7194e6c6e0a58e7f",
      "status" : "passed",
      "time" : {
        "start" : 1610685115142,
        "stop" : 1610685115291,
        "duration" : 149
      }
    } ]
  },
  "It should return the device pool that has the provided name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ba6e4d06d60fef04",
      "status" : "passed",
      "time" : {
        "start" : 1610685110503,
        "stop" : 1610685110539,
        "duration" : 36
      }
    } ]
  },
  "When an error happens fetching the logger then info messages should be redirect to stdout" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5756a284a905c498",
      "status" : "passed",
      "time" : {
        "start" : 1610685111361,
        "stop" : 1610685114893,
        "duration" : 3532
      }
    } ]
  },
  "When sessionToken is provided but no credentials, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "84752af8b9d85ece",
      "status" : "passed",
      "time" : {
        "start" : 1610685116828,
        "stop" : 1610685116853,
        "duration" : 25
      }
    } ]
  },
  "It should not try to download the reports when an error happens fetching the associated jobs of the test run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cc7d66901378bce6",
      "status" : "passed",
      "time" : {
        "start" : 1610685110931,
        "stop" : 1610685110965,
        "duration" : 34
      }
    } ]
  },
  "When creating a project in AWS device farm, if project name is empty an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "374163a107d83ae3",
      "status" : "passed",
      "time" : {
        "start" : 1610685116148,
        "stop" : 1610685116158,
        "duration" : 10
      }
    } ]
  },
  "When deleting an Upload it should return a DeleteUploadResponse as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f93887e751f7f23a",
      "status" : "passed",
      "time" : {
        "start" : 1610685116441,
        "stop" : 1610685116570,
        "duration" : 129
      }
    } ]
  },
  "When creating AWS device farm upload, project ARN is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f60a00ee5d519987",
      "status" : "passed",
      "time" : {
        "start" : 1610685114936,
        "stop" : 1610685115174,
        "duration" : 238
      }
    } ]
  },
  "When an error happens, it should return the exception wrapped as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ff862c9ab5e1b0b",
      "status" : "passed",
      "time" : {
        "start" : 1610685117026,
        "stop" : 1610685117038,
        "duration" : 12
      }
    } ]
  },
  "When accessKeyId, secretAccessKey, session token and region name are provided, it should return a runner that uses a device farm client with basic credentials, the session token and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "98803bd5c82169c9",
      "status" : "passed",
      "time" : {
        "start" : 1610685116998,
        "stop" : 1610685117009,
        "duration" : 11
      }
    } ]
  },
  "It should return the executed run when the execution is completed" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5586adaa4fb8adaf",
      "status" : "passed",
      "time" : {
        "start" : 1610685110128,
        "stop" : 1610685110327,
        "duration" : 199
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching current run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "113b0adf46857d3e",
      "status" : "passed",
      "time" : {
        "start" : 1610685110650,
        "stop" : 1610685110667,
        "duration" : 17
      }
    } ]
  },
  "When no path is provided an Illegal Argument error should be returnes as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2ac49c74a759df01",
      "status" : "passed",
      "time" : {
        "start" : 1610685110805,
        "stop" : 1610685110831,
        "duration" : 26
      }
    } ]
  },
  "It should log an error message when downloading a report fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3937aefaf950b91a",
      "status" : "passed",
      "time" : {
        "start" : 1610685110790,
        "stop" : 1610685110809,
        "duration" : 19
      }
    } ]
  },
  "It should delete uploads in parallel and keep deleting even if some operation fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ab49ce31daa6c21b",
      "status" : "passed",
      "time" : {
        "start" : 1610685110501,
        "stop" : 1610685110632,
        "duration" : 131
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return an error as a left if upload ARN is empty" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8866ff6dd7f4609e",
      "status" : "passed",
      "time" : {
        "start" : 1610685116044,
        "stop" : 1610685116161,
        "duration" : 117
      }
    } ]
  },
  "When Android upload type is used, and file does not have .apk extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3cd7f570037da411",
      "status" : "passed",
      "time" : {
        "start" : 1610685110502,
        "stop" : 1610685110586,
        "duration" : 84
      }
    } ]
  },
  "When creating a project in AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fc7244a25760964d",
      "status" : "passed",
      "time" : {
        "start" : 1610685116043,
        "stop" : 1610685116146,
        "duration" : 103
      }
    } ]
  },
  "When running a test in device farm it should return the result" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fb9b21cb2dba585a",
      "status" : "passed",
      "time" : {
        "start" : 1610685112955,
        "stop" : 1610685113001,
        "duration" : 46
      }
    } ]
  },
  "When scheduling a run, it should return the run as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "af05fd15766c1d40",
      "status" : "passed",
      "time" : {
        "start" : 1610685114110,
        "stop" : 1610685114807,
        "duration" : 697
      }
    } ]
  },
  "When a run name is provided it should be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3379eb7b3f3b7567",
      "status" : "passed",
      "time" : {
        "start" : 1610685114809,
        "stop" : 1610685114894,
        "duration" : 85
      }
    } ]
  },
  "It should return the first found device pool as default when no name is provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2dfc951e17ecc668",
      "status" : "passed",
      "time" : {
        "start" : 1610685110127,
        "stop" : 1610685110314,
        "duration" : 187
      }
    } ]
  },
  "When Android upload type is used, file must end with .apk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a63a5172bae29bfa",
      "status" : "passed",
      "time" : {
        "start" : 1610685110128,
        "stop" : 1610685110331,
        "duration" : 203
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the run handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "29fcaab958bbc8bb",
      "status" : "passed",
      "time" : {
        "start" : 1610685113500,
        "stop" : 1610685113535,
        "duration" : 35
      }
    } ]
  },
  "It should return the upload, if its ready to be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "33b191058d559ea5",
      "status" : "passed",
      "time" : {
        "start" : 1610685110127,
        "stop" : 1610685110332,
        "duration" : 205
      }
    } ]
  },
  "When fetching the artifacts of a test execution any error should be returned as a DeviceFarmTractorError left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9d37f2a8770a972f",
      "status" : "passed",
      "time" : {
        "start" : 1610685115148,
        "stop" : 1610685115290,
        "duration" : 142
      }
    } ]
  },
  "info messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5df59a5b83e573ef",
      "status" : "passed",
      "time" : {
        "start" : 1610685115138,
        "stop" : 1610685115277,
        "duration" : 139
      }
    } ]
  },
  "When fetching a RUN it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d6372842ec479cb1",
      "status" : "passed",
      "time" : {
        "start" : 1610685115624,
        "stop" : 1610685116038,
        "duration" : 414
      }
    } ]
  },
  "When an error happens fetching the logger then error messages should be redirect to stderr" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e611156bc07e2d95",
      "status" : "passed",
      "time" : {
        "start" : 1610685115432,
        "stop" : 1610685115704,
        "duration" : 272
      }
    } ]
  },
  "When accessKeyId and secretAccessKey are provided, it should return a runner that uses a device farm client with basic credentials" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b33e269612979b44",
      "status" : "passed",
      "time" : {
        "start" : 1610685116855,
        "stop" : 1610685116871,
        "duration" : 16
      }
    } ]
  },
  "It should log an error message when creating the test report directory of an specific device fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "90444052e5b56587",
      "status" : "passed",
      "time" : {
        "start" : 1610685110880,
        "stop" : 1610685110895,
        "duration" : 15
      }
    } ]
  },
  "When running a test in device farm it should have APPIUM NODE as test type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "40878dd2d72a7fa0",
      "status" : "passed",
      "time" : {
        "start" : 1610685113106,
        "stop" : 1610685113119,
        "duration" : 13
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "416fd2e311d9843c",
      "status" : "passed",
      "time" : {
        "start" : 1610685113441,
        "stop" : 1610685113464,
        "duration" : 23
      }
    } ]
  },
  "When loading a file from a given path, if the files doesn't exists an error should be returned as a Left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1a112837b975d76a",
      "status" : "passed",
      "time" : {
        "start" : 1610685110788,
        "stop" : 1610685110802,
        "duration" : 14
      }
    } ]
  },
  "When no run ARN is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6269d15107ef00c6",
      "status" : "passed",
      "time" : {
        "start" : 1610685116045,
        "stop" : 1610685116149,
        "duration" : 104
      }
    } ]
  },
  "When fetching projects from AWS, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "43bb959c8a39fede",
      "status" : "passed",
      "time" : {
        "start" : 1610685115140,
        "stop" : 1610685115187,
        "duration" : 47
      }
    } ]
  },
  "When only accessKeyId is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "14a8a4f310064b50",
      "status" : "passed",
      "time" : {
        "start" : 1610685116771,
        "stop" : 1610685116787,
        "duration" : 16
      }
    } ]
  },
  "When running a test in device farm it should try to delete the uploads of the execution by default" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8d04e895bde2bd6d",
      "status" : "passed",
      "time" : {
        "start" : 1610685113325,
        "stop" : 1610685113395,
        "duration" : 70
      }
    } ]
  },
  "It should wait until the execution completes" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8d16815ba54c5fc6",
      "status" : "passed",
      "time" : {
        "start" : 1610685110495,
        "stop" : 1610685110648,
        "duration" : 153
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when creating the upload fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "221a4a8f31324617",
      "status" : "passed",
      "time" : {
        "start" : 1610685110902,
        "stop" : 1610685110915,
        "duration" : 13
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler and the parallel upload process should be cancelled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9ec3b994b7487450",
      "status" : "passed",
      "time" : {
        "start" : 1610685113479,
        "stop" : 1610685113497,
        "duration" : 18
      }
    } ]
  },
  "When fetching the artifacts of a test execution if no run arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "54326af09638de6c",
      "status" : "passed",
      "time" : {
        "start" : 1610685115315,
        "stop" : 1610685115580,
        "duration" : 265
      }
    } ]
  },
  "It should return the last DeviceFarmTractorError returned when fetching upload is still failing after the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b1b41626d20e7580",
      "status" : "passed",
      "time" : {
        "start" : 1610685110725,
        "stop" : 1610685110776,
        "duration" : 51
      }
    } ]
  },
  "It should return an ErrorDownloadingArtifact when there is a problem saving the artifact on disk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4b94ba4c356feb3c",
      "status" : "passed",
      "time" : {
        "start" : 1610685110482,
        "stop" : 1610685110629,
        "duration" : 147
      }
    } ]
  },
  "It should keep fetching upload status even if an error happens in a a retry" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "98f01d401ea6baa5",
      "status" : "passed",
      "time" : {
        "start" : 1610685110868,
        "stop" : 1610685110900,
        "duration" : 32
      }
    } ]
  },
  "When basic credentials and sessionToken are provided, it should return a runner that uses a device farm client with the basic credentials and session token" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "68363dd0802c00f2",
      "status" : "passed",
      "time" : {
        "start" : 1610685116886,
        "stop" : 1610685116893,
        "duration" : 7
      }
    } ]
  },
  "When fetching the artifacts of a test execution it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7aa8f3b80346dba9",
      "status" : "passed",
      "time" : {
        "start" : 1610685114110,
        "stop" : 1610685115130,
        "duration" : 1020
      }
    } ]
  },
  "When no app arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5b9d6cdd8a5f5a37",
      "status" : "passed",
      "time" : {
        "start" : 1610685114937,
        "stop" : 1610685115172,
        "duration" : 235
      }
    } ]
  },
  "When running a test in device farm if no run name is provided it should create the name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "54ab8f0dad82c94c",
      "status" : "passed",
      "time" : {
        "start" : 1610685113179,
        "stop" : 1610685113258,
        "duration" : 79
      }
    } ]
  },
  "error messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6fb342a3fc64b04d",
      "status" : "passed",
      "time" : {
        "start" : 1610685116039,
        "stop" : 1610685116252,
        "duration" : 213
      }
    } ]
  },
  "When an error happens scheduling the run, it should return an ErrorSchedulingRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3bd7de9b28776144",
      "status" : "passed",
      "time" : {
        "start" : 1610685115570,
        "stop" : 1610685115593,
        "duration" : 23
      }
    } ]
  },
  "When running a test in device farm by default the capture video configuration should be enabled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "28df4852af1e6455",
      "status" : "passed",
      "time" : {
        "start" : 1610685113066,
        "stop" : 1610685113087,
        "duration" : 21
      }
    } ]
  },
  "It should download all the reports associated to the test Run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "24cf0008b269b6e7",
      "status" : "passed",
      "time" : {
        "start" : 1610685110712,
        "stop" : 1610685110784,
        "duration" : 72
      }
    } ]
  },
  "When fetching an AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e7613fb58870647e",
      "status" : "passed",
      "time" : {
        "start" : 1610685116164,
        "stop" : 1610685116418,
        "duration" : 254
      }
    } ]
  },
  "When creating a runner without credentials and region, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2eeae1b8f0d686d2",
      "status" : "passed",
      "time" : {
        "start" : 1610685114126,
        "stop" : 1610685116745,
        "duration" : 2619
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when scheduling the run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e7849ea21cca8836",
      "status" : "passed",
      "time" : {
        "start" : 1610685110670,
        "stop" : 1610685110703,
        "duration" : 33
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when uploading the artifact to s3 fails, no matters the upload status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "51fc8599b4036474",
      "status" : "passed",
      "time" : {
        "start" : 1610685110786,
        "stop" : 1610685110863,
        "duration" : 77
      }
    } ]
  },
  "When fetching device pools from AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f993e7c09347640e",
      "status" : "passed",
      "time" : {
        "start" : 1610685115310,
        "stop" : 1610685115577,
        "duration" : 267
      }
    } ]
  },
  "It should return a project if its found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4547a343ff740b12",
      "status" : "passed",
      "time" : {
        "start" : 1610685110133,
        "stop" : 1610685110307,
        "duration" : 174
      }
    } ]
  },
  "When creating AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a4a6c548d721d24",
      "status" : "passed",
      "time" : {
        "start" : 1610685114809,
        "stop" : 1610685114893,
        "duration" : 84
      }
    } ]
  },
  "When deleting an Upload if no arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cde2aa14b7335007",
      "status" : "passed",
      "time" : {
        "start" : 1610685116616,
        "stop" : 1610685116664,
        "duration" : 48
      }
    } ]
  },
  "It should return an UploadFailureError, if the upload status is not succeeded before the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "52a2497fba8252e1",
      "status" : "passed",
      "time" : {
        "start" : 1610685110631,
        "stop" : 1610685110723,
        "duration" : 92
      }
    } ]
  },
  "When IOS upload type is used, file must end with .ipa" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "86f86ee2a562f955",
      "status" : "passed",
      "time" : {
        "start" : 1610685110589,
        "stop" : 1610685110602,
        "duration" : 13
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the devices pool handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ddc3d3a517ffcc39",
      "status" : "passed",
      "time" : {
        "start" : 1610685113413,
        "stop" : 1610685113437,
        "duration" : 24
      }
    } ]
  },
  "It should return a DevicePoolNotFoundError when a device pool is not found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "12648050c789a338",
      "status" : "passed",
      "time" : {
        "start" : 1610685110595,
        "stop" : 1610685110621,
        "duration" : 26
      }
    } ]
  },
  "When running a test in device farm if the base test report directory path is empty it should not download the results" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "50d11148aedb5947",
      "status" : "passed",
      "time" : {
        "start" : 1610685113262,
        "stop" : 1610685113296,
        "duration" : 34
      }
    } ]
  },
  "When uploading artifact to S3, it should return a right when upload result has OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a36596c7d543656e",
      "status" : "passed",
      "time" : {
        "start" : 1610685115312,
        "stop" : 1610685115373,
        "duration" : 61
      }
    } ]
  },
  "When running a test in device farm the capture video configuration should be able to be specified" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bd8fff6cd5c2273d",
      "status" : "passed",
      "time" : {
        "start" : 1610685113091,
        "stop" : 1610685113103,
        "duration" : 12
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens fetching the associated device pools of the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e79711d670b4ff87",
      "status" : "passed",
      "time" : {
        "start" : 1610685110623,
        "stop" : 1610685110677,
        "duration" : 54
      }
    } ]
  },
  "When deleting an Upload any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "dcd6e34772fb4fd4",
      "status" : "passed",
      "time" : {
        "start" : 1610685116594,
        "stop" : 1610685116602,
        "duration" : 8
      }
    } ]
  },
  "When uploading artifact to S3, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "658bbf4133f1d716",
      "status" : "passed",
      "time" : {
        "start" : 1610685115492,
        "stop" : 1610685115572,
        "duration" : 80
      }
    } ]
  },
  "It should download all the reports even if any of them fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d7d3d232b2760076",
      "status" : "passed",
      "time" : {
        "start" : 1610685110811,
        "stop" : 1610685110870,
        "duration" : 59
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the projects handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a1efe34a6d63ae6b",
      "status" : "passed",
      "time" : {
        "start" : 1610685113398,
        "stop" : 1610685113410,
        "duration" : 12
      }
    } ]
  },
  "When running a test in device farm it should use the test project uploaded and the test spec provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ca30ac3a40629dd9",
      "status" : "passed",
      "time" : {
        "start" : 1610685113122,
        "stop" : 1610685113143,
        "duration" : 21
      }
    } ]
  },
  "When running a test in device farm if the base test report directory is provided it should use it as a path" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e248283e6c1ea451",
      "status" : "passed",
      "time" : {
        "start" : 1610685113299,
        "stop" : 1610685113311,
        "duration" : 12
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching artifacts fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9e37b478a3d417db",
      "status" : "passed",
      "time" : {
        "start" : 1610685110661,
        "stop" : 1610685110709,
        "duration" : 48
      }
    } ]
  },
  "When an error happens fetching the associated jobs of a Run then it should return a ErrorListingAssociatedJobs as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fe52a7937c3622dd",
      "status" : "passed",
      "time" : {
        "start" : 1610685116457,
        "stop" : 1610685116571,
        "duration" : 114
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, the file must have .zip extension" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "793632f6587845f9",
      "status" : "passed",
      "time" : {
        "start" : 1610685110675,
        "stop" : 1610685110680,
        "duration" : 5
      }
    } ]
  },
  "It should return a NoRegisteredDevicePoolsError when there is no device pools associated to the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "341facc6a3a82215",
      "status" : "passed",
      "time" : {
        "start" : 1610685110545,
        "stop" : 1610685110592,
        "duration" : 47
      }
    } ]
  },
  "When only secretAccessKey is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "eba09c1dcd344f57",
      "status" : "passed",
      "time" : {
        "start" : 1610685116789,
        "stop" : 1610685116824,
        "duration" : 35
      }
    } ]
  },
  "It should delete all the provided uploads" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1365d2702264413f",
      "status" : "passed",
      "time" : {
        "start" : 1610685110128,
        "stop" : 1610685110344,
        "duration" : 216
      }
    } ]
  },
  "When creating a runner without credentials but with region, it should return a runner that uses a device farm client with default configuration but that use the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "509e2ee82168931a",
      "status" : "passed",
      "time" : {
        "start" : 1610685116896,
        "stop" : 1610685116940,
        "duration" : 44
      }
    } ]
  },
  "When accessKeyId, secretAccessKey and region name are provided, it should return a runner that uses a device farm client with basic credentials and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "328efc30a74e3809",
      "status" : "passed",
      "time" : {
        "start" : 1610685116957,
        "stop" : 1610685116970,
        "duration" : 13
      }
    } ]
  },
  "When uploading artifact to S3, it should return a left when upload result has not OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fc0c4b254a76a037",
      "status" : "passed",
      "time" : {
        "start" : 1610685115375,
        "stop" : 1610685115476,
        "duration" : 101
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, file must end with .yml" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "df0e35661977e1b9",
      "status" : "passed",
      "time" : {
        "start" : 1610685110623,
        "stop" : 1610685110650,
        "duration" : 27
      }
    } ]
  },
  "When an error happens fetching a run it should return a ErrorFetchingAWSRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cf937d992b77c179",
      "status" : "passed",
      "time" : {
        "start" : 1610685116150,
        "stop" : 1610685116170,
        "duration" : 20
      }
    } ]
  },
  "When unknown Upload type is used, an error should be returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ae457dc483f7d414",
      "status" : "passed",
      "time" : {
        "start" : 1610685110737,
        "stop" : 1610685110743,
        "duration" : 6
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return the upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3ae6d5973133a26",
      "status" : "passed",
      "time" : {
        "start" : 1610685115594,
        "stop" : 1610685116041,
        "duration" : 447
      }
    } ]
  },
  "When deleting an Upload if non-200 response is received then an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "86e6fe63829d6569",
      "status" : "passed",
      "time" : {
        "start" : 1610685116605,
        "stop" : 1610685116613,
        "duration" : 8
      }
    } ]
  },
  "When creating a project in AWS device farm, it should return the created project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3b744ecf6b2e890c",
      "status" : "passed",
      "time" : {
        "start" : 1610685115189,
        "stop" : 1610685116040,
        "duration" : 851
      }
    } ]
  },
  "It should download the customer artifact of a job execution" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f296a4f543628c84",
      "status" : "passed",
      "time" : {
        "start" : 1610685110128,
        "stop" : 1610685110478,
        "duration" : 350
      }
    } ]
  },
  "When no project arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5c13b0e38573ad09",
      "status" : "passed",
      "time" : {
        "start" : 1610685115313,
        "stop" : 1610685115553,
        "duration" : 240
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when the artifact to upload doesn't exists" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4be8d65e3e578f31",
      "status" : "passed",
      "time" : {
        "start" : 1610685111061,
        "stop" : 1610685111071,
        "duration" : 10
      }
    } ]
  },
  "It should never try to delete when no uploads are provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ea3539521ac3d0f8",
      "status" : "passed",
      "time" : {
        "start" : 1610685110634,
        "stop" : 1610685110664,
        "duration" : 30
      }
    } ]
  },
  "When running a test in device farm it should use the correct paths for the different upload types" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "28bc5263a656980e",
      "status" : "passed",
      "time" : {
        "start" : 1610685113147,
        "stop" : 1610685113167,
        "duration" : 20
      }
    } ]
  },
  "It should return an UploadFailureError if the upload status is not succeeded" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2d947a6552805a15",
      "status" : "passed",
      "time" : {
        "start" : 1610685110485,
        "stop" : 1610685110614,
        "duration" : 129
      }
    } ]
  },
  "When creating AWS device farm upload, artifact name is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "19be9ad0d7016f37",
      "status" : "passed",
      "time" : {
        "start" : 1610685115175,
        "stop" : 1610685115293,
        "duration" : 118
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens creating a new project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2612c91315fd1745",
      "status" : "passed",
      "time" : {
        "start" : 1610685110700,
        "stop" : 1610685110716,
        "duration" : 16
      }
    } ]
  },
  "It should create the project if it is no found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7b8c068a7a3df6d5",
      "status" : "passed",
      "time" : {
        "start" : 1610685110499,
        "stop" : 1610685110639,
        "duration" : 140
      }
    } ]
  },
  "When fetching device pools from AWS device farm, it should return the associated device pools of a given project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "54378dfc258b239b",
      "status" : "passed",
      "time" : {
        "start" : 1610685114119,
        "stop" : 1610685115134,
        "duration" : 1015
      }
    } ]
  },
  "When no device pool arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "79fb269a384821de",
      "status" : "passed",
      "time" : {
        "start" : 1610685115173,
        "stop" : 1610685115292,
        "duration" : 119
      }
    } ]
  },
  "When fetching projects from AWS, it should return the project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8ac9daba9409c48d",
      "status" : "passed",
      "time" : {
        "start" : 1610685114113,
        "stop" : 1610685115134,
        "duration" : 1021
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, and file does not have .zip extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "14344c9e8f070edb",
      "status" : "passed",
      "time" : {
        "start" : 1610685110682,
        "stop" : 1610685110728,
        "duration" : 46
      }
    } ]
  },
  "When fetching all the jobs associated to a Run it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3000eac43f244c8c",
      "status" : "passed",
      "time" : {
        "start" : 1610685116171,
        "stop" : 1610685116424,
        "duration" : 253
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, and file does not have .yml extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "380088f640b977b6",
      "status" : "passed",
      "time" : {
        "start" : 1610685110654,
        "stop" : 1610685110673,
        "duration" : 19
      }
    } ]
  },
  "It should not fail if there is no customer artifacts to download" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "46d7ebf6d263bed8",
      "status" : "passed",
      "time" : {
        "start" : 1610685110637,
        "stop" : 1610685110657,
        "duration" : 20
      }
    } ]
  },
  "It should return a DeviceFarmIllegalArtifactExtension when the upload file doesn't satisfy the upload type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f20a28e55912f998",
      "status" : "passed",
      "time" : {
        "start" : 1610685110917,
        "stop" : 1610685111047,
        "duration" : 130
      }
    } ]
  },
  "When creating AWS device farm upload, tt should return the created AWS Upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "38f771b97696ae8c",
      "status" : "passed",
      "time" : {
        "start" : 1610685113705,
        "stop" : 1610685114792,
        "duration" : 1087
      }
    } ]
  },
  "It should log an error message when creating the test reports directory fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "66e0f3eed3486d18",
      "status" : "passed",
      "time" : {
        "start" : 1610685110898,
        "stop" : 1610685110928,
        "duration" : 30
      }
    } ]
  },
  "When loading a file from a given path, it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "10414dc09f850c17",
      "status" : "passed",
      "time" : {
        "start" : 1610685110745,
        "stop" : 1610685110776,
        "duration" : 31
      }
    } ]
  }
}