{
  "It should return a DeviceFarmTractorError if something happens fetching device farm projects" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7bac58d81a6e1ae5",
      "status" : "passed",
      "time" : {
        "start" : 1610683488408,
        "stop" : 1610683488414,
        "duration" : 6
      }
    } ]
  },
  "When IOS upload type is used, and file does not have .ipa extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "502d261e337b17e6",
      "status" : "passed",
      "time" : {
        "start" : 1610683488420,
        "stop" : 1610683488469,
        "duration" : 49
      }
    } ]
  },
  "When running a test in device farm it should use the correct Project ARN in the process" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7a076726f8d1879f",
      "status" : "passed",
      "time" : {
        "start" : 1610683491873,
        "stop" : 1610683491926,
        "duration" : 53
      }
    } ]
  },
  "When fetching device pools from AWS device farm, project ARN is mandatory, a left should be returned if it is not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "69a1911b03c5db7d",
      "status" : "passed",
      "time" : {
        "start" : 1610683492964,
        "stop" : 1610683493124,
        "duration" : 160
      }
    } ]
  },
  "It should return the device pool that has the provided name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "67232d08ae6dc68e",
      "status" : "passed",
      "time" : {
        "start" : 1610683488362,
        "stop" : 1610683488442,
        "duration" : 80
      }
    } ]
  },
  "When an error happens fetching the logger then info messages should be redirect to stdout" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4a0a9409bc927841",
      "status" : "passed",
      "time" : {
        "start" : 1610683489771,
        "stop" : 1610683492669,
        "duration" : 2898
      }
    } ]
  },
  "When sessionToken is provided but no credentials, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fdb2018a75861e08",
      "status" : "passed",
      "time" : {
        "start" : 1610683494726,
        "stop" : 1610683494743,
        "duration" : 17
      }
    } ]
  },
  "It should not try to download the reports when an error happens fetching the associated jobs of the test run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "eefe614bba7d8db",
      "status" : "passed",
      "time" : {
        "start" : 1610683488766,
        "stop" : 1610683488775,
        "duration" : 9
      }
    } ]
  },
  "When deleting an Upload it should return a DeleteUploadResponse as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f39c2cf4c4b7d254",
      "status" : "passed",
      "time" : {
        "start" : 1610683494358,
        "stop" : 1610683494631,
        "duration" : 273
      }
    } ]
  },
  "When creating a project in AWS device farm, if project name is empty an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c98c609d015f4f7d",
      "status" : "passed",
      "time" : {
        "start" : 1610683493808,
        "stop" : 1610683494249,
        "duration" : 441
      }
    } ]
  },
  "When creating AWS device farm upload, project ARN is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b92d263edf8bd511",
      "status" : "passed",
      "time" : {
        "start" : 1610683492956,
        "stop" : 1610683493255,
        "duration" : 299
      }
    } ]
  },
  "When an error happens, it should return the exception wrapped as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6582ac33eaae525c",
      "status" : "passed",
      "time" : {
        "start" : 1610683494910,
        "stop" : 1610683494921,
        "duration" : 11
      }
    } ]
  },
  "When accessKeyId, secretAccessKey, session token and region name are provided, it should return a runner that uses a device farm client with basic credentials, the session token and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7675820a9df72386",
      "status" : "passed",
      "time" : {
        "start" : 1610683494875,
        "stop" : 1610683494896,
        "duration" : 21
      }
    } ]
  },
  "It should return the executed run when the execution is completed" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d809b95944e76bc0",
      "status" : "passed",
      "time" : {
        "start" : 1610683487956,
        "stop" : 1610683488251,
        "duration" : 295
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching current run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a0bb2128d65ed4ce",
      "status" : "passed",
      "time" : {
        "start" : 1610683488468,
        "stop" : 1610683488512,
        "duration" : 44
      }
    } ]
  },
  "When no path is provided an Illegal Argument error should be returnes as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a21bee7dd5241a8a",
      "status" : "passed",
      "time" : {
        "start" : 1610683488725,
        "stop" : 1610683488747,
        "duration" : 22
      }
    } ]
  },
  "It should log an error message when downloading a report fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9b1ef32f064164a7",
      "status" : "passed",
      "time" : {
        "start" : 1610683488645,
        "stop" : 1610683488691,
        "duration" : 46
      }
    } ]
  },
  "It should delete uploads in parallel and keep deleting even if some operation fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c96e3c1fec86c319",
      "status" : "passed",
      "time" : {
        "start" : 1610683488356,
        "stop" : 1610683488418,
        "duration" : 62
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return an error as a left if upload ARN is empty" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f51591b6c76ccb91",
      "status" : "passed",
      "time" : {
        "start" : 1610683494244,
        "stop" : 1610683494306,
        "duration" : 62
      }
    } ]
  },
  "When Android upload type is used, and file does not have .apk extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bf58bc20c4fcc706",
      "status" : "passed",
      "time" : {
        "start" : 1610683488345,
        "stop" : 1610683488382,
        "duration" : 37
      }
    } ]
  },
  "When creating a project in AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e1fc629fea3bae65",
      "status" : "passed",
      "time" : {
        "start" : 1610683493675,
        "stop" : 1610683493737,
        "duration" : 62
      }
    } ]
  },
  "When running a test in device farm it should return the result" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c79ac1f97d9dbd3",
      "status" : "passed",
      "time" : {
        "start" : 1610683491778,
        "stop" : 1610683491870,
        "duration" : 92
      }
    } ]
  },
  "When scheduling a run, it should return the run as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f7ce82e2d790ddd6",
      "status" : "passed",
      "time" : {
        "start" : 1610683491772,
        "stop" : 1610683492664,
        "duration" : 892
      }
    } ]
  },
  "When a run name is provided it should be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1665cd8320e0a403",
      "status" : "passed",
      "time" : {
        "start" : 1610683492666,
        "stop" : 1610683492854,
        "duration" : 188
      }
    } ]
  },
  "It should return the first found device pool as default when no name is provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "55dd801b3eb1a6b8",
      "status" : "passed",
      "time" : {
        "start" : 1610683487958,
        "stop" : 1610683488138,
        "duration" : 180
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the run handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d9ff4434c28e9e48",
      "status" : "passed",
      "time" : {
        "start" : 1610683494071,
        "stop" : 1610683494117,
        "duration" : 46
      }
    } ]
  },
  "When Android upload type is used, file must end with .apk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3c776f3101b1ad4b",
      "status" : "passed",
      "time" : {
        "start" : 1610683487957,
        "stop" : 1610683488120,
        "duration" : 163
      }
    } ]
  },
  "It should return the upload, if its ready to be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ad89c4cfe035a347",
      "status" : "passed",
      "time" : {
        "start" : 1610683487954,
        "stop" : 1610683488254,
        "duration" : 300
      }
    } ]
  },
  "When fetching the artifacts of a test execution any error should be returned as a DeviceFarmTractorError left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "570f10717cc8b06f",
      "status" : "passed",
      "time" : {
        "start" : 1610683492959,
        "stop" : 1610683493135,
        "duration" : 176
      }
    } ]
  },
  "info messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e654ad2fdc6b2c3a",
      "status" : "passed",
      "time" : {
        "start" : 1610683492808,
        "stop" : 1610683493103,
        "duration" : 295
      }
    } ]
  },
  "When fetching a RUN it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f4aa7605f326eff8",
      "status" : "passed",
      "time" : {
        "start" : 1610683493805,
        "stop" : 1610683494246,
        "duration" : 441
      }
    } ]
  },
  "When an error happens fetching the logger then error messages should be redirect to stderr" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d232350063b6f6d7",
      "status" : "passed",
      "time" : {
        "start" : 1610683493268,
        "stop" : 1610683493474,
        "duration" : 206
      }
    } ]
  },
  "When accessKeyId and secretAccessKey are provided, it should return a runner that uses a device farm client with basic credentials" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2965bda96f2bd861",
      "status" : "passed",
      "time" : {
        "start" : 1610683494746,
        "stop" : 1610683494764,
        "duration" : 18
      }
    } ]
  },
  "It should log an error message when creating the test report directory of an specific device fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c9950f5c4cf396d6",
      "status" : "passed",
      "time" : {
        "start" : 1610683488742,
        "stop" : 1610683488755,
        "duration" : 13
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "586b1a0d6e235fd6",
      "status" : "passed",
      "time" : {
        "start" : 1610683493807,
        "stop" : 1610683493880,
        "duration" : 73
      }
    } ]
  },
  "When running a test in device farm it should have APPIUM NODE as test type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "69f7c4ec64568d97",
      "status" : "passed",
      "time" : {
        "start" : 1610683492315,
        "stop" : 1610683492657,
        "duration" : 342
      }
    } ]
  },
  "When loading a file from a given path, if the files doesn't exists an error should be returned as a Left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "73615f7f74d9330d",
      "status" : "passed",
      "time" : {
        "start" : 1610683488708,
        "stop" : 1610683488719,
        "duration" : 11
      }
    } ]
  },
  "When no run ARN is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cc8057491309fd78",
      "status" : "passed",
      "time" : {
        "start" : 1610683494309,
        "stop" : 1610683494355,
        "duration" : 46
      }
    } ]
  },
  "When fetching projects from AWS, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8b00017eb27e490b",
      "status" : "passed",
      "time" : {
        "start" : 1610683492960,
        "stop" : 1610683493102,
        "duration" : 142
      }
    } ]
  },
  "When only accessKeyId is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "286e62c4cdf439b3",
      "status" : "passed",
      "time" : {
        "start" : 1610683494646,
        "stop" : 1610683494670,
        "duration" : 24
      }
    } ]
  },
  "When running a test in device farm it should try to delete the uploads of the execution by default" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "917c7547c06fd02a",
      "status" : "passed",
      "time" : {
        "start" : 1610683493302,
        "stop" : 1610683493321,
        "duration" : 19
      }
    } ]
  },
  "It should wait until the execution completes" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4e8d5447db428f74",
      "status" : "passed",
      "time" : {
        "start" : 1610683488347,
        "stop" : 1610683488460,
        "duration" : 113
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler and the parallel upload process should be cancelled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2208d9a617cab115",
      "status" : "passed",
      "time" : {
        "start" : 1610683493939,
        "stop" : 1610683493997,
        "duration" : 58
      }
    } ]
  },
  "When fetching the artifacts of a test execution if no run arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "92e9624d35fefd6b",
      "status" : "passed",
      "time" : {
        "start" : 1610683493137,
        "stop" : 1610683493410,
        "duration" : 273
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when creating the upload fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ef47221ad150ba03",
      "status" : "passed",
      "time" : {
        "start" : 1610683488780,
        "stop" : 1610683488783,
        "duration" : 3
      }
    } ]
  },
  "It should return the last DeviceFarmTractorError returned when fetching upload is still failing after the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d21e3d74888a2a11",
      "status" : "passed",
      "time" : {
        "start" : 1610683488517,
        "stop" : 1610683488642,
        "duration" : 125
      }
    } ]
  },
  "It should return an ErrorDownloadingArtifact when there is a problem saving the artifact on disk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "72fe2e52c56dcce1",
      "status" : "passed",
      "time" : {
        "start" : 1610683488358,
        "stop" : 1610683488418,
        "duration" : 60
      }
    } ]
  },
  "When fetching the artifacts of a test execution it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5bc4183de757af17",
      "status" : "passed",
      "time" : {
        "start" : 1610683491791,
        "stop" : 1610683492957,
        "duration" : 1166
      }
    } ]
  },
  "It should keep fetching upload status even if an error happens in a a retry" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7ef4e8fb4d38cb4a",
      "status" : "passed",
      "time" : {
        "start" : 1610683488751,
        "stop" : 1610683488778,
        "duration" : 27
      }
    } ]
  },
  "When basic credentials and sessionToken are provided, it should return a runner that uses a device farm client with the basic credentials and session token" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3111fdee7a58df0f",
      "status" : "passed",
      "time" : {
        "start" : 1610683494778,
        "stop" : 1610683494789,
        "duration" : 11
      }
    } ]
  },
  "When no app arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e6c1b0fdaaf04249",
      "status" : "passed",
      "time" : {
        "start" : 1610683492957,
        "stop" : 1610683493254,
        "duration" : 297
      }
    } ]
  },
  "When running a test in device farm if no run name is provided it should create the name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e7606bde5d2e9091",
      "status" : "passed",
      "time" : {
        "start" : 1610683492958,
        "stop" : 1610683493103,
        "duration" : 145
      }
    } ]
  },
  "error messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7b1e49e88742dea1",
      "status" : "passed",
      "time" : {
        "start" : 1610683493641,
        "stop" : 1610683494050,
        "duration" : 409
      }
    } ]
  },
  "When an error happens scheduling the run, it should return an ErrorSchedulingRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2bf82773be20d753",
      "status" : "passed",
      "time" : {
        "start" : 1610683493677,
        "stop" : 1610683493804,
        "duration" : 127
      }
    } ]
  },
  "When running a test in device farm by default the capture video configuration should be enabled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "97ad83521be0412d",
      "status" : "passed",
      "time" : {
        "start" : 1610683491929,
        "stop" : 1610683492122,
        "duration" : 193
      }
    } ]
  },
  "It should download all the reports associated to the test Run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6b2a41b4d6c71c",
      "status" : "passed",
      "time" : {
        "start" : 1610683488492,
        "stop" : 1610683488635,
        "duration" : 143
      }
    } ]
  },
  "When creating a runner without credentials and region, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b3952ee5b28ce705",
      "status" : "passed",
      "time" : {
        "start" : 1610683491836,
        "stop" : 1610683494643,
        "duration" : 2807
      }
    } ]
  },
  "When fetching an AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e2a13dffccd0a8f8",
      "status" : "passed",
      "time" : {
        "start" : 1610683494311,
        "stop" : 1610683494356,
        "duration" : 45
      }
    } ]
  },
  "When fetching device pools from AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f22384b332e46feb",
      "status" : "passed",
      "time" : {
        "start" : 1610683493126,
        "stop" : 1610683493490,
        "duration" : 364
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when uploading the artifact to s3 fails, no matters the upload status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "42918052dcad8370",
      "status" : "passed",
      "time" : {
        "start" : 1610683488644,
        "stop" : 1610683488749,
        "duration" : 105
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when scheduling the run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5f514a18a4807de4",
      "status" : "passed",
      "time" : {
        "start" : 1610683488514,
        "stop" : 1610683488536,
        "duration" : 22
      }
    } ]
  },
  "When creating AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3d67e32c19c31302",
      "status" : "passed",
      "time" : {
        "start" : 1610683492686,
        "stop" : 1610683492853,
        "duration" : 167
      }
    } ]
  },
  "It should return a project if its found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b4c03f9223665a65",
      "status" : "passed",
      "time" : {
        "start" : 1610683487956,
        "stop" : 1610683488121,
        "duration" : 165
      }
    } ]
  },
  "It should return an UploadFailureError, if the upload status is not succeeded before the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5518726291a3e275",
      "status" : "passed",
      "time" : {
        "start" : 1610683488385,
        "stop" : 1610683488515,
        "duration" : 130
      }
    } ]
  },
  "When deleting an Upload if no arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "70a03bd9a30d0b27",
      "status" : "passed",
      "time" : {
        "start" : 1610683494702,
        "stop" : 1610683494737,
        "duration" : 35
      }
    } ]
  },
  "When IOS upload type is used, file must end with .ipa" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "67627260032b7a6d",
      "status" : "passed",
      "time" : {
        "start" : 1610683488385,
        "stop" : 1610683488391,
        "duration" : 6
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the devices pool handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7c42507cbd733d6e",
      "status" : "passed",
      "time" : {
        "start" : 1610683493709,
        "stop" : 1610683493805,
        "duration" : 96
      }
    } ]
  },
  "It should return a DevicePoolNotFoundError when a device pool is not found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8096d3daf7062be1",
      "status" : "passed",
      "time" : {
        "start" : 1610683488482,
        "stop" : 1610683488507,
        "duration" : 25
      }
    } ]
  },
  "When running a test in device farm if the base test report directory path is empty it should not download the results" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4c2b7db2dc36f21",
      "status" : "passed",
      "time" : {
        "start" : 1610683493133,
        "stop" : 1610683493184,
        "duration" : 51
      }
    } ]
  },
  "When uploading artifact to S3, it should return a right when upload result has OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b22837704fecc3ab",
      "status" : "passed",
      "time" : {
        "start" : 1610683493469,
        "stop" : 1610683493683,
        "duration" : 214
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens fetching the associated device pools of the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8268b5c6eba9f65a",
      "status" : "passed",
      "time" : {
        "start" : 1610683488510,
        "stop" : 1610683488561,
        "duration" : 51
      }
    } ]
  },
  "When running a test in device farm the capture video configuration should be able to be specified" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "82095ae3cd5390dd",
      "status" : "passed",
      "time" : {
        "start" : 1610683492170,
        "stop" : 1610683492300,
        "duration" : 130
      }
    } ]
  },
  "When deleting an Upload any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "741cd361267500e3",
      "status" : "passed",
      "time" : {
        "start" : 1610683494644,
        "stop" : 1610683494651,
        "duration" : 7
      }
    } ]
  },
  "It should download all the reports even if any of them fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "52d609ff8fbf3e78",
      "status" : "passed",
      "time" : {
        "start" : 1610683488695,
        "stop" : 1610683488736,
        "duration" : 41
      }
    } ]
  },
  "When uploading artifact to S3, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5792bcd822bdd14d",
      "status" : "passed",
      "time" : {
        "start" : 1610683493803,
        "stop" : 1610683493812,
        "duration" : 9
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the projects handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fc89ae4c7c778b96",
      "status" : "passed",
      "time" : {
        "start" : 1610683493335,
        "stop" : 1610683493470,
        "duration" : 135
      }
    } ]
  },
  "When running a test in device farm if the base test report directory is provided it should use it as a path" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5cb250167bd5f453",
      "status" : "passed",
      "time" : {
        "start" : 1610683493186,
        "stop" : 1610683493295,
        "duration" : 109
      }
    } ]
  },
  "When running a test in device farm it should use the test project uploaded and the test spec provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bd1a94fd628833ad",
      "status" : "passed",
      "time" : {
        "start" : 1610683492659,
        "stop" : 1610683492775,
        "duration" : 116
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching artifacts fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cc4f943860787ec4",
      "status" : "passed",
      "time" : {
        "start" : 1610683488473,
        "stop" : 1610683488490,
        "duration" : 17
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, the file must have .zip extension" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d1339ef6ddd2fdb",
      "status" : "passed",
      "time" : {
        "start" : 1610683488600,
        "stop" : 1610683488621,
        "duration" : 21
      }
    } ]
  },
  "When an error happens fetching the associated jobs of a Run then it should return a ErrorListingAssociatedJobs as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5c3c6e4e12c45fc2",
      "status" : "passed",
      "time" : {
        "start" : 1610683494663,
        "stop" : 1610683494678,
        "duration" : 15
      }
    } ]
  },
  "It should return a NoRegisteredDevicePoolsError when there is no device pools associated to the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1a4fe9fd5c20330a",
      "status" : "passed",
      "time" : {
        "start" : 1610683488445,
        "stop" : 1610683488479,
        "duration" : 34
      }
    } ]
  },
  "When only secretAccessKey is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4905b96d302c61b3",
      "status" : "passed",
      "time" : {
        "start" : 1610683494672,
        "stop" : 1610683494701,
        "duration" : 29
      }
    } ]
  },
  "It should delete all the provided uploads" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "52ea19f147682947",
      "status" : "passed",
      "time" : {
        "start" : 1610683487954,
        "stop" : 1610683488287,
        "duration" : 333
      }
    } ]
  },
  "When creating a runner without credentials but with region, it should return a runner that uses a device farm client with default configuration but that use the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "be1b6239e8495a55",
      "status" : "passed",
      "time" : {
        "start" : 1610683494793,
        "stop" : 1610683494853,
        "duration" : 60
      }
    } ]
  },
  "When accessKeyId, secretAccessKey and region name are provided, it should return a runner that uses a device farm client with basic credentials and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "802c397f253704ee",
      "status" : "passed",
      "time" : {
        "start" : 1610683494857,
        "stop" : 1610683494872,
        "duration" : 15
      }
    } ]
  },
  "When uploading artifact to S3, it should return a left when upload result has not OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f4a409ac76ecd12d",
      "status" : "passed",
      "time" : {
        "start" : 1610683493711,
        "stop" : 1610683493732,
        "duration" : 21
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, file must end with .yml" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f5648e0d24a86649",
      "status" : "passed",
      "time" : {
        "start" : 1610683488479,
        "stop" : 1610683488520,
        "duration" : 41
      }
    } ]
  },
  "When an error happens fetching a run it should return a ErrorFetchingAWSRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "78c82a2f1073e238",
      "status" : "passed",
      "time" : {
        "start" : 1610683494360,
        "stop" : 1610683494391,
        "duration" : 31
      }
    } ]
  },
  "When unknown Upload type is used, an error should be returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a7b1058c6003e49",
      "status" : "passed",
      "time" : {
        "start" : 1610683488641,
        "stop" : 1610683488679,
        "duration" : 38
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return the upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "41856667b96f2fb6",
      "status" : "passed",
      "time" : {
        "start" : 1610683493813,
        "stop" : 1610683494230,
        "duration" : 417
      }
    } ]
  },
  "When deleting an Upload if non-200 response is received then an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "44ae8416b3166379",
      "status" : "passed",
      "time" : {
        "start" : 1610683494659,
        "stop" : 1610683494682,
        "duration" : 23
      }
    } ]
  },
  "When creating a project in AWS device farm, it should return the created project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d2a0c9552dc3ec03",
      "status" : "passed",
      "time" : {
        "start" : 1610683493129,
        "stop" : 1610683493639,
        "duration" : 510
      }
    } ]
  },
  "It should download the customer artifact of a job execution" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a90d633dd179ba14",
      "status" : "passed",
      "time" : {
        "start" : 1610683487955,
        "stop" : 1610683488286,
        "duration" : 331
      }
    } ]
  },
  "When no project arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1c584cf2e12b92b4",
      "status" : "passed",
      "time" : {
        "start" : 1610683493466,
        "stop" : 1610683493626,
        "duration" : 160
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when the artifact to upload doesn't exists" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6327308356b9a46",
      "status" : "passed",
      "time" : {
        "start" : 1610683488790,
        "stop" : 1610683488793,
        "duration" : 3
      }
    } ]
  },
  "It should never try to delete when no uploads are provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "36adfa8681e3c8b1",
      "status" : "passed",
      "time" : {
        "start" : 1610683488422,
        "stop" : 1610683488471,
        "duration" : 49
      }
    } ]
  },
  "When running a test in device farm it should use the correct paths for the different upload types" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a801b2b964595069",
      "status" : "passed",
      "time" : {
        "start" : 1610683492806,
        "stop" : 1610683492953,
        "duration" : 147
      }
    } ]
  },
  "When creating AWS device farm upload, artifact name is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "87e7b37955ddbc3",
      "status" : "passed",
      "time" : {
        "start" : 1610683493258,
        "stop" : 1610683493408,
        "duration" : 150
      }
    } ]
  },
  "It should return an UploadFailureError if the upload status is not succeeded" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6801ee8d406ba45f",
      "status" : "passed",
      "time" : {
        "start" : 1610683488349,
        "stop" : 1610683488381,
        "duration" : 32
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens creating a new project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "84d84e1b66a4a9e6",
      "status" : "passed",
      "time" : {
        "start" : 1610683488416,
        "stop" : 1610683488443,
        "duration" : 27
      }
    } ]
  },
  "It should create the project if it is no found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e5bf0b1fe211d3e5",
      "status" : "passed",
      "time" : {
        "start" : 1610683488343,
        "stop" : 1610683488372,
        "duration" : 29
      }
    } ]
  },
  "When fetching device pools from AWS device farm, it should return the associated device pools of a given project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "75182fd306af3a0",
      "status" : "passed",
      "time" : {
        "start" : 1610683491798,
        "stop" : 1610683492960,
        "duration" : 1162
      }
    } ]
  },
  "When no device pool arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "846d2cd06c62ee5e",
      "status" : "passed",
      "time" : {
        "start" : 1610683493277,
        "stop" : 1610683493407,
        "duration" : 130
      }
    } ]
  },
  "When fetching projects from AWS, it should return the project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "88c0ad9105e50d95",
      "status" : "passed",
      "time" : {
        "start" : 1610683491793,
        "stop" : 1610683492956,
        "duration" : 1163
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, and file does not have .zip extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c80ed63c06521202",
      "status" : "passed",
      "time" : {
        "start" : 1610683488624,
        "stop" : 1610683488639,
        "duration" : 15
      }
    } ]
  },
  "When fetching all the jobs associated to a Run it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a6b2e493f4ccd05d",
      "status" : "passed",
      "time" : {
        "start" : 1610683494394,
        "stop" : 1610683494660,
        "duration" : 266
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, and file does not have .yml extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "99d9e1917a81dfd0",
      "status" : "passed",
      "time" : {
        "start" : 1610683488524,
        "stop" : 1610683488583,
        "duration" : 59
      }
    } ]
  },
  "It should not fail if there is no customer artifacts to download" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9967a3bb872ca265",
      "status" : "passed",
      "time" : {
        "start" : 1610683488420,
        "stop" : 1610683488470,
        "duration" : 50
      }
    } ]
  },
  "It should return a DeviceFarmIllegalArtifactExtension when the upload file doesn't satisfy the upload type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "339f857898e3898a",
      "status" : "passed",
      "time" : {
        "start" : 1610683488785,
        "stop" : 1610683488788,
        "duration" : 3
      }
    } ]
  },
  "When creating AWS device farm upload, tt should return the created AWS Upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "391739bc6fa0de3a",
      "status" : "passed",
      "time" : {
        "start" : 1610683491069,
        "stop" : 1610683492668,
        "duration" : 1599
      }
    } ]
  },
  "It should log an error message when creating the test reports directory fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7e2ef102de6abe51",
      "status" : "passed",
      "time" : {
        "start" : 1610683488757,
        "stop" : 1610683488764,
        "duration" : 7
      }
    } ]
  },
  "When loading a file from a given path, it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7cdef1979bc134c3",
      "status" : "passed",
      "time" : {
        "start" : 1610683488694,
        "stop" : 1610683488706,
        "duration" : 12
      }
    } ]
  }
}