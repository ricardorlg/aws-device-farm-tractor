{
  "It should return a DeviceFarmTractorError if something happens fetching device farm projects" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "af0d2b0b37715b3b",
      "status" : "passed",
      "time" : {
        "start" : 1610732860910,
        "stop" : 1610732860940,
        "duration" : 30
      }
    } ]
  },
  "When IOS upload type is used, and file does not have .ipa extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6427769bd7371d39",
      "status" : "passed",
      "time" : {
        "start" : 1610732861002,
        "stop" : 1610732861023,
        "duration" : 21
      }
    } ]
  },
  "When running a test in device farm it should use the correct Project ARN in the process" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2a29f6cda64ec9b3",
      "status" : "passed",
      "time" : {
        "start" : 1610732864162,
        "stop" : 1610732864594,
        "duration" : 432
      }
    } ]
  },
  "When fetching device pools from AWS device farm, project ARN is mandatory, a left should be returned if it is not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c23a63fb885ea2e4",
      "status" : "passed",
      "time" : {
        "start" : 1610732865732,
        "stop" : 1610732865872,
        "duration" : 140
      }
    } ]
  },
  "It should return the device pool that has the provided name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d835fe337bbb76dd",
      "status" : "passed",
      "time" : {
        "start" : 1610732860773,
        "stop" : 1610732860812,
        "duration" : 39
      }
    } ]
  },
  "When an error happens fetching the logger then info messages should be redirect to stdout" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a599f0903898f1a",
      "status" : "passed",
      "time" : {
        "start" : 1610732861821,
        "stop" : 1610732865524,
        "duration" : 3703
      }
    } ]
  },
  "When sessionToken is provided but no credentials, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "800ef1092efb45a5",
      "status" : "passed",
      "time" : {
        "start" : 1610732867609,
        "stop" : 1610732867633,
        "duration" : 24
      }
    } ]
  },
  "It should not try to download the reports when an error happens fetching the associated jobs of the test run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4da795c62d00ce0f",
      "status" : "passed",
      "time" : {
        "start" : 1610732861483,
        "stop" : 1610732861502,
        "duration" : 19
      }
    } ]
  },
  "When deleting an Upload it should return a DeleteUploadResponse as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f7bd0d5c0b3e856",
      "status" : "passed",
      "time" : {
        "start" : 1610732867264,
        "stop" : 1610732867482,
        "duration" : 218
      }
    } ]
  },
  "When creating a project in AWS device farm, if project name is empty an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e6b82ab565b13f79",
      "status" : "passed",
      "time" : {
        "start" : 1610732866566,
        "stop" : 1610732866829,
        "duration" : 263
      }
    } ]
  },
  "When creating AWS device farm upload, project ARN is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2659dd8883eb331b",
      "status" : "passed",
      "time" : {
        "start" : 1610732865699,
        "stop" : 1610732865874,
        "duration" : 175
      }
    } ]
  },
  "When an error happens, it should return the exception wrapped as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ad2e57cad15f22ca",
      "status" : "passed",
      "time" : {
        "start" : 1610732867828,
        "stop" : 1610732867838,
        "duration" : 10
      }
    } ]
  },
  "When accessKeyId, secretAccessKey, session token and region name are provided, it should return a runner that uses a device farm client with basic credentials, the session token and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6fe2ab942c4841bc",
      "status" : "passed",
      "time" : {
        "start" : 1610732867793,
        "stop" : 1610732867813,
        "duration" : 20
      }
    } ]
  },
  "It should return the executed run when the execution is completed" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9916b5b053a64624",
      "status" : "passed",
      "time" : {
        "start" : 1610732860394,
        "stop" : 1610732860590,
        "duration" : 196
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching current run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "678bcea204466f2e",
      "status" : "passed",
      "time" : {
        "start" : 1610732861044,
        "stop" : 1610732861056,
        "duration" : 12
      }
    } ]
  },
  "When no path is provided an Illegal Argument error should be returnes as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b1af9bb62c4cdb0f",
      "status" : "passed",
      "time" : {
        "start" : 1610732861333,
        "stop" : 1610732861339,
        "duration" : 6
      }
    } ]
  },
  "It should log an error message when downloading a report fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "adff61b43205d130",
      "status" : "passed",
      "time" : {
        "start" : 1610732861287,
        "stop" : 1610732861350,
        "duration" : 63
      }
    } ]
  },
  "It should delete uploads in parallel and keep deleting even if some operation fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "528181d8cca4555c",
      "status" : "passed",
      "time" : {
        "start" : 1610732860765,
        "stop" : 1610732860908,
        "duration" : 143
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return an error as a left if upload ARN is empty" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4bd297baab9d9e32",
      "status" : "passed",
      "time" : {
        "start" : 1610732867037,
        "stop" : 1610732867064,
        "duration" : 27
      }
    } ]
  },
  "When Android upload type is used, and file does not have .apk extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "76cb29c06bb3bcd6",
      "status" : "passed",
      "time" : {
        "start" : 1610732860776,
        "stop" : 1610732860887,
        "duration" : 111
      }
    } ]
  },
  "When creating a project in AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c21874e6269a0a51",
      "status" : "passed",
      "time" : {
        "start" : 1610732866377,
        "stop" : 1610732866562,
        "duration" : 185
      }
    } ]
  },
  "When running a test in device farm it should return the result" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ad9acea31880ded7",
      "status" : "passed",
      "time" : {
        "start" : 1610732864081,
        "stop" : 1610732864141,
        "duration" : 60
      }
    } ]
  },
  "When scheduling a run, it should return the run as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e731822ba955fbf1",
      "status" : "passed",
      "time" : {
        "start" : 1610732864593,
        "stop" : 1610732865433,
        "duration" : 840
      }
    } ]
  },
  "When a run name is provided it should be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d4a8c52382a0552",
      "status" : "passed",
      "time" : {
        "start" : 1610732865510,
        "stop" : 1610732865688,
        "duration" : 178
      }
    } ]
  },
  "It should return the first found device pool as default when no name is provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5ebf56007b8beabe",
      "status" : "passed",
      "time" : {
        "start" : 1610732860391,
        "stop" : 1610732860586,
        "duration" : 195
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the run handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "54950b459e07388f",
      "status" : "passed",
      "time" : {
        "start" : 1610732866632,
        "stop" : 1610732866644,
        "duration" : 12
      }
    } ]
  },
  "When Android upload type is used, file must end with .apk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d344c03056a1bf5d",
      "status" : "passed",
      "time" : {
        "start" : 1610732860391,
        "stop" : 1610732860585,
        "duration" : 194
      }
    } ]
  },
  "It should return the upload, if its ready to be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7e2745be63d780c",
      "status" : "passed",
      "time" : {
        "start" : 1610732860391,
        "stop" : 1610732860646,
        "duration" : 255
      }
    } ]
  },
  "When fetching the artifacts of a test execution any error should be returned as a DeviceFarmTractorError left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "31762cc52d7824f6",
      "status" : "passed",
      "time" : {
        "start" : 1610732865703,
        "stop" : 1610732865758,
        "duration" : 55
      }
    } ]
  },
  "info messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7c0a68f8d301238d",
      "status" : "passed",
      "time" : {
        "start" : 1610732865659,
        "stop" : 1610732865952,
        "duration" : 293
      }
    } ]
  },
  "When fetching a RUN it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ffd19b52b965e1ce",
      "status" : "passed",
      "time" : {
        "start" : 1610732866565,
        "stop" : 1610732866822,
        "duration" : 257
      }
    } ]
  },
  "When an error happens fetching the logger then error messages should be redirect to stderr" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b8e434cbf72c8278",
      "status" : "passed",
      "time" : {
        "start" : 1610732866077,
        "stop" : 1610732866379,
        "duration" : 302
      }
    } ]
  },
  "When accessKeyId and secretAccessKey are provided, it should return a runner that uses a device farm client with basic credentials" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "297bb065c1ad9cee",
      "status" : "passed",
      "time" : {
        "start" : 1610732867637,
        "stop" : 1610732867664,
        "duration" : 27
      }
    } ]
  },
  "It should log an error message when creating the test report directory of an specific device fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b792c66cbf1e1e5c",
      "status" : "passed",
      "time" : {
        "start" : 1610732861395,
        "stop" : 1610732861423,
        "duration" : 28
      }
    } ]
  },
  "When running a test in device farm it should have APPIUM NODE as test type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d6a030be320c2443",
      "status" : "passed",
      "time" : {
        "start" : 1610732865233,
        "stop" : 1610732865305,
        "duration" : 72
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a213e39378feae5f",
      "status" : "passed",
      "time" : {
        "start" : 1610732866375,
        "stop" : 1610732866564,
        "duration" : 189
      }
    } ]
  },
  "When loading a file from a given path, if the files doesn't exists an error should be returned as a Left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "49da15e1a54c19a1",
      "status" : "passed",
      "time" : {
        "start" : 1610732861287,
        "stop" : 1610732861330,
        "duration" : 43
      }
    } ]
  },
  "When no run ARN is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e7c1e51d12e41003",
      "status" : "passed",
      "time" : {
        "start" : 1610732866823,
        "stop" : 1610732867041,
        "duration" : 218
      }
    } ]
  },
  "When fetching projects from AWS, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b2264db635174712",
      "status" : "passed",
      "time" : {
        "start" : 1610732865865,
        "stop" : 1610732865885,
        "duration" : 20
      }
    } ]
  },
  "When only accessKeyId is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ee7390e39029ddb8",
      "status" : "passed",
      "time" : {
        "start" : 1610732867512,
        "stop" : 1610732867532,
        "duration" : 20
      }
    } ]
  },
  "When running a test in device farm it should try to delete the uploads of the execution by default" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "84429dd5085ce83c",
      "status" : "passed",
      "time" : {
        "start" : 1610732866092,
        "stop" : 1610732866143,
        "duration" : 51
      }
    } ]
  },
  "It should wait until the execution completes" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "94df2e1435789c99",
      "status" : "passed",
      "time" : {
        "start" : 1610732860773,
        "stop" : 1610732861018,
        "duration" : 245
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler and the parallel upload process should be cancelled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bdb110378d24772e",
      "status" : "passed",
      "time" : {
        "start" : 1610732866569,
        "stop" : 1610732866630,
        "duration" : 61
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when creating the upload fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4977415b3beae6cf",
      "status" : "passed",
      "time" : {
        "start" : 1610732861432,
        "stop" : 1610732861448,
        "duration" : 16
      }
    } ]
  },
  "When fetching the artifacts of a test execution if no run arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5c04e55fa4dd995d",
      "status" : "passed",
      "time" : {
        "start" : 1610732865760,
        "stop" : 1610732865870,
        "duration" : 110
      }
    } ]
  },
  "It should return the last DeviceFarmTractorError returned when fetching upload is still failing after the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "69c611a9d668d941",
      "status" : "passed",
      "time" : {
        "start" : 1610732861073,
        "stop" : 1610732861246,
        "duration" : 173
      }
    } ]
  },
  "It should return an ErrorDownloadingArtifact when there is a problem saving the artifact on disk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e2f505b5e9d628d8",
      "status" : "passed",
      "time" : {
        "start" : 1610732860782,
        "stop" : 1610732860951,
        "duration" : 169
      }
    } ]
  },
  "When fetching the artifacts of a test execution it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "806954531ae08a13",
      "status" : "passed",
      "time" : {
        "start" : 1610732864602,
        "stop" : 1610732865701,
        "duration" : 1099
      }
    } ]
  },
  "It should keep fetching upload status even if an error happens in a a retry" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d99da80ccbe0a63b",
      "status" : "passed",
      "time" : {
        "start" : 1610732861368,
        "stop" : 1610732861429,
        "duration" : 61
      }
    } ]
  },
  "When basic credentials and sessionToken are provided, it should return a runner that uses a device farm client with the basic credentials and session token" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e7b0f82f158c2a9e",
      "status" : "passed",
      "time" : {
        "start" : 1610732867682,
        "stop" : 1610732867696,
        "duration" : 14
      }
    } ]
  },
  "When no app arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6cc495526d712ce2",
      "status" : "passed",
      "time" : {
        "start" : 1610732865695,
        "stop" : 1610732865878,
        "duration" : 183
      }
    } ]
  },
  "When running a test in device farm if no run name is provided it should create the name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "53b6d07ea59f230c",
      "status" : "passed",
      "time" : {
        "start" : 1610732865531,
        "stop" : 1610732865731,
        "duration" : 200
      }
    } ]
  },
  "error messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "aeb5263e9dfd79c1",
      "status" : "passed",
      "time" : {
        "start" : 1610732866476,
        "stop" : 1610732866819,
        "duration" : 343
      }
    } ]
  },
  "When an error happens scheduling the run, it should return an ErrorSchedulingRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "953f37fe96ef690d",
      "status" : "passed",
      "time" : {
        "start" : 1610732866341,
        "stop" : 1610732866564,
        "duration" : 223
      }
    } ]
  },
  "When running a test in device farm by default the capture video configuration should be enabled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "40e8a0c2fa22db1",
      "status" : "passed",
      "time" : {
        "start" : 1610732864597,
        "stop" : 1610732864848,
        "duration" : 251
      }
    } ]
  },
  "It should download all the reports associated to the test Run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7e021b85d7e4831c",
      "status" : "passed",
      "time" : {
        "start" : 1610732861087,
        "stop" : 1610732861252,
        "duration" : 165
      }
    } ]
  },
  "When creating a runner without credentials and region, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2dd1a85443841d45",
      "status" : "passed",
      "time" : {
        "start" : 1610732864867,
        "stop" : 1610732867484,
        "duration" : 2617
      }
    } ]
  },
  "When fetching an AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b89ed74e63942345",
      "status" : "passed",
      "time" : {
        "start" : 1610732867071,
        "stop" : 1610732867262,
        "duration" : 191
      }
    } ]
  },
  "When fetching device pools from AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d47737899d29d8bc",
      "status" : "passed",
      "time" : {
        "start" : 1610732865874,
        "stop" : 1610732865987,
        "duration" : 113
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when uploading the artifact to s3 fails, no matters the upload status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c138e8e59e1d1204",
      "status" : "passed",
      "time" : {
        "start" : 1610732861284,
        "stop" : 1610732861365,
        "duration" : 81
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when scheduling the run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "466f8942886e4bdc",
      "status" : "passed",
      "time" : {
        "start" : 1610732861060,
        "stop" : 1610732861102,
        "duration" : 42
      }
    } ]
  },
  "It should return a project if its found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ffff259065004d9c",
      "status" : "passed",
      "time" : {
        "start" : 1610732860391,
        "stop" : 1610732860584,
        "duration" : 193
      }
    } ]
  },
  "When creating AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7fb6175b6641fab1",
      "status" : "passed",
      "time" : {
        "start" : 1610732865531,
        "stop" : 1610732865698,
        "duration" : 167
      }
    } ]
  },
  "It should return an UploadFailureError, if the upload status is not succeeded before the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fdc7273e77f49875",
      "status" : "passed",
      "time" : {
        "start" : 1610732860920,
        "stop" : 1610732861070,
        "duration" : 150
      }
    } ]
  },
  "When deleting an Upload if no arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e82cbf7d5c5e672b",
      "status" : "passed",
      "time" : {
        "start" : 1610732867543,
        "stop" : 1610732867612,
        "duration" : 69
      }
    } ]
  },
  "When IOS upload type is used, file must end with .ipa" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "abe434ed907bcd8a",
      "status" : "passed",
      "time" : {
        "start" : 1610732860914,
        "stop" : 1610732860998,
        "duration" : 84
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the devices pool handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b5d408260d82b2ae",
      "status" : "passed",
      "time" : {
        "start" : 1610732866323,
        "stop" : 1610732866342,
        "duration" : 19
      }
    } ]
  },
  "It should return a DevicePoolNotFoundError when a device pool is not found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7c67877378f8bf77",
      "status" : "passed",
      "time" : {
        "start" : 1610732860918,
        "stop" : 1610732860999,
        "duration" : 81
      }
    } ]
  },
  "When running a test in device farm if the base test report directory path is empty it should not download the results" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1bf0853a8e12efab",
      "status" : "passed",
      "time" : {
        "start" : 1610732865734,
        "stop" : 1610732865865,
        "duration" : 131
      }
    } ]
  },
  "When uploading artifact to S3, it should return a right when upload result has OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9fd891b2489cff6f",
      "status" : "passed",
      "time" : {
        "start" : 1610732866378,
        "stop" : 1610732866569,
        "duration" : 191
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens fetching the associated device pools of the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c119eb3915fd2e9",
      "status" : "passed",
      "time" : {
        "start" : 1610732861008,
        "stop" : 1610732861027,
        "duration" : 19
      }
    } ]
  },
  "When running a test in device farm the capture video configuration should be able to be specified" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "41c89200a52a6e93",
      "status" : "passed",
      "time" : {
        "start" : 1610732864868,
        "stop" : 1610732864899,
        "duration" : 31
      }
    } ]
  },
  "When deleting an Upload any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4b114a6c3c6db035",
      "status" : "passed",
      "time" : {
        "start" : 1610732867512,
        "stop" : 1610732867522,
        "duration" : 10
      }
    } ]
  },
  "When uploading artifact to S3, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "752d03574a4dd2b1",
      "status" : "passed",
      "time" : {
        "start" : 1610732866638,
        "stop" : 1610732866820,
        "duration" : 182
      }
    } ]
  },
  "It should download all the reports even if any of them fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a95aac724ccf44f6",
      "status" : "passed",
      "time" : {
        "start" : 1610732861353,
        "stop" : 1610732861384,
        "duration" : 31
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the projects handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "368eaea5b5df2ad2",
      "status" : "passed",
      "time" : {
        "start" : 1610732866169,
        "stop" : 1610732866184,
        "duration" : 15
      }
    } ]
  },
  "When running a test in device farm it should use the test project uploaded and the test spec provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ed3b19988a18388c",
      "status" : "passed",
      "time" : {
        "start" : 1610732865310,
        "stop" : 1610732865326,
        "duration" : 16
      }
    } ]
  },
  "When running a test in device farm if the base test report directory is provided it should use it as a path" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7bc0b47877c9a95a",
      "status" : "passed",
      "time" : {
        "start" : 1610732865876,
        "stop" : 1610732866078,
        "duration" : 202
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching artifacts fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2864cdf19da11d62",
      "status" : "passed",
      "time" : {
        "start" : 1610732861034,
        "stop" : 1610732861063,
        "duration" : 29
      }
    } ]
  },
  "When an error happens fetching the associated jobs of a Run then it should return a ErrorListingAssociatedJobs as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ec4200d93f8b627a",
      "status" : "passed",
      "time" : {
        "start" : 1610732867278,
        "stop" : 1610732867312,
        "duration" : 34
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, the file must have .zip extension" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "35e9abbaaf99b835",
      "status" : "passed",
      "time" : {
        "start" : 1610732861101,
        "stop" : 1610732861123,
        "duration" : 22
      }
    } ]
  },
  "It should return a NoRegisteredDevicePoolsError when there is no device pools associated to the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fbb401ed25a29f9d",
      "status" : "passed",
      "time" : {
        "start" : 1610732860822,
        "stop" : 1610732860891,
        "duration" : 69
      }
    } ]
  },
  "When only secretAccessKey is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d2e8d450faad40a8",
      "status" : "passed",
      "time" : {
        "start" : 1610732867536,
        "stop" : 1610732867606,
        "duration" : 70
      }
    } ]
  },
  "It should delete all the provided uploads" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "45c6d6f50b70cb5d",
      "status" : "passed",
      "time" : {
        "start" : 1610732860392,
        "stop" : 1610732860688,
        "duration" : 296
      }
    } ]
  },
  "When creating a runner without credentials but with region, it should return a runner that uses a device farm client with default configuration but that use the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ff9ae2c8d4004a2d",
      "status" : "passed",
      "time" : {
        "start" : 1610732867703,
        "stop" : 1610732867733,
        "duration" : 30
      }
    } ]
  },
  "When accessKeyId, secretAccessKey and region name are provided, it should return a runner that uses a device farm client with basic credentials and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3cae2783267d1ca0",
      "status" : "passed",
      "time" : {
        "start" : 1610732867744,
        "stop" : 1610732867789,
        "duration" : 45
      }
    } ]
  },
  "When uploading artifact to S3, it should return a left when upload result has not OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "810785e2ff67e5a3",
      "status" : "passed",
      "time" : {
        "start" : 1610732866571,
        "stop" : 1610732866628,
        "duration" : 57
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, file must end with .yml" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2cb376286a89d053",
      "status" : "passed",
      "time" : {
        "start" : 1610732861046,
        "stop" : 1610732861075,
        "duration" : 29
      }
    } ]
  },
  "When an error happens fetching a run it should return a ErrorFetchingAWSRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3901fe921b415f8",
      "status" : "passed",
      "time" : {
        "start" : 1610732867042,
        "stop" : 1610732867068,
        "duration" : 26
      }
    } ]
  },
  "When unknown Upload type is used, an error should be returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e900744664600711",
      "status" : "passed",
      "time" : {
        "start" : 1610732861208,
        "stop" : 1610732861242,
        "duration" : 34
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return the upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cdc32f45ebe009e9",
      "status" : "passed",
      "time" : {
        "start" : 1610732866825,
        "stop" : 1610732867034,
        "duration" : 209
      }
    } ]
  },
  "When deleting an Upload if non-200 response is received then an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f3e8017539198e65",
      "status" : "passed",
      "time" : {
        "start" : 1610732867523,
        "stop" : 1610732867542,
        "duration" : 19
      }
    } ]
  },
  "When creating a project in AWS device farm, it should return the created project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "571e2fde6da51f2b",
      "status" : "passed",
      "time" : {
        "start" : 1610732865886,
        "stop" : 1610732866375,
        "duration" : 489
      }
    } ]
  },
  "It should download the customer artifact of a job execution" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "298e0931b9f7ed47",
      "status" : "passed",
      "time" : {
        "start" : 1610732860392,
        "stop" : 1610732860716,
        "duration" : 324
      }
    } ]
  },
  "When no project arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4cccda417c9a8241",
      "status" : "passed",
      "time" : {
        "start" : 1610732866250,
        "stop" : 1610732866339,
        "duration" : 89
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when the artifact to upload doesn't exists" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "96bc5a5f6126ce24",
      "status" : "passed",
      "time" : {
        "start" : 1610732861495,
        "stop" : 1610732861524,
        "duration" : 29
      }
    } ]
  },
  "It should never try to delete when no uploads are provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f04cc2b7bde54be3",
      "status" : "passed",
      "time" : {
        "start" : 1610732860916,
        "stop" : 1610732860993,
        "duration" : 77
      }
    } ]
  },
  "When running a test in device farm it should use the correct paths for the different upload types" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "87005866f7e9be77",
      "status" : "passed",
      "time" : {
        "start" : 1610732865331,
        "stop" : 1610732865431,
        "duration" : 100
      }
    } ]
  },
  "It should return an UploadFailureError if the upload status is not succeeded" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "404f91727317c6be",
      "status" : "passed",
      "time" : {
        "start" : 1610732860781,
        "stop" : 1610732860912,
        "duration" : 131
      }
    } ]
  },
  "When creating AWS device farm upload, artifact name is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c6ab8184dfa11c92",
      "status" : "passed",
      "time" : {
        "start" : 1610732865878,
        "stop" : 1610732866269,
        "duration" : 391
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens creating a new project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5b5104f068c3837e",
      "status" : "passed",
      "time" : {
        "start" : 1610732860944,
        "stop" : 1610732861013,
        "duration" : 69
      }
    } ]
  },
  "It should create the project if it is no found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b1ba3d07ab5371e4",
      "status" : "passed",
      "time" : {
        "start" : 1610732860763,
        "stop" : 1610732860851,
        "duration" : 88
      }
    } ]
  },
  "When fetching device pools from AWS device farm, it should return the associated device pools of a given project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c889060a404493b8",
      "status" : "passed",
      "time" : {
        "start" : 1610732864123,
        "stop" : 1610732865704,
        "duration" : 1581
      }
    } ]
  },
  "When no device pool arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "39d889f21dafe3b6",
      "status" : "passed",
      "time" : {
        "start" : 1610732865880,
        "stop" : 1610732866238,
        "duration" : 358
      }
    } ]
  },
  "When fetching projects from AWS, it should return the project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c11677f233dfb642",
      "status" : "passed",
      "time" : {
        "start" : 1610732864591,
        "stop" : 1610732865862,
        "duration" : 1271
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, and file does not have .zip extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2321d108193425d6",
      "status" : "passed",
      "time" : {
        "start" : 1610732861141,
        "stop" : 1610732861200,
        "duration" : 59
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, and file does not have .yml extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7a9d2dfbc1a970d",
      "status" : "passed",
      "time" : {
        "start" : 1610732861088,
        "stop" : 1610732861098,
        "duration" : 10
      }
    } ]
  },
  "When fetching all the jobs associated to a Run it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "421a43b03e5c923a",
      "status" : "passed",
      "time" : {
        "start" : 1610732867070,
        "stop" : 1610732867271,
        "duration" : 201
      }
    } ]
  },
  "It should not fail if there is no customer artifacts to download" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "dcd584fbb8114e25",
      "status" : "passed",
      "time" : {
        "start" : 1610732860954,
        "stop" : 1610732861020,
        "duration" : 66
      }
    } ]
  },
  "It should return a DeviceFarmIllegalArtifactExtension when the upload file doesn't satisfy the upload type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ffbc13381e63025e",
      "status" : "passed",
      "time" : {
        "start" : 1610732861451,
        "stop" : 1610732861492,
        "duration" : 41
      }
    } ]
  },
  "When creating AWS device farm upload, tt should return the created AWS Upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8a73798505c34da3",
      "status" : "passed",
      "time" : {
        "start" : 1610732864583,
        "stop" : 1610732865433,
        "duration" : 850
      }
    } ]
  },
  "It should log an error message when creating the test reports directory fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7c7c1bb480c32ba6",
      "status" : "passed",
      "time" : {
        "start" : 1610732861439,
        "stop" : 1610732861481,
        "duration" : 42
      }
    } ]
  },
  "When loading a file from a given path, it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2e55b12a7bf09c2c",
      "status" : "passed",
      "time" : {
        "start" : 1610732861253,
        "stop" : 1610732861265,
        "duration" : 12
      }
    } ]
  }
}