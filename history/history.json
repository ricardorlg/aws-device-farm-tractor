{
  "It should return a DeviceFarmTractorError if something happens fetching device farm projects" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ac963d556a66d05b",
      "status" : "passed",
      "time" : {
        "start" : 1610724995841,
        "stop" : 1610724995909,
        "duration" : 68
      }
    } ]
  },
  "When IOS upload type is used, and file does not have .ipa extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "434f92abce8f7fd2",
      "status" : "passed",
      "time" : {
        "start" : 1610724995926,
        "stop" : 1610724995957,
        "duration" : 31
      }
    } ]
  },
  "When running a test in device farm it should use the correct Project ARN in the process" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "80444c4a8839e45a",
      "status" : "passed",
      "time" : {
        "start" : 1610724998752,
        "stop" : 1610724998855,
        "duration" : 103
      }
    } ]
  },
  "When fetching device pools from AWS device farm, project ARN is mandatory, a left should be returned if it is not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "70757897a938ade0",
      "status" : "passed",
      "time" : {
        "start" : 1610725001580,
        "stop" : 1610725001758,
        "duration" : 178
      }
    } ]
  },
  "It should return the device pool that has the provided name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "db2431089de335a7",
      "status" : "passed",
      "time" : {
        "start" : 1610724995797,
        "stop" : 1610724995893,
        "duration" : 96
      }
    } ]
  },
  "When an error happens fetching the logger then info messages should be redirect to stdout" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9ad892a5df7f556c",
      "status" : "passed",
      "time" : {
        "start" : 1610724996900,
        "stop" : 1610725000220,
        "duration" : 3320
      }
    } ]
  },
  "When sessionToken is provided but no credentials, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "352785b8121038c5",
      "status" : "passed",
      "time" : {
        "start" : 1610725003503,
        "stop" : 1610725003532,
        "duration" : 29
      }
    } ]
  },
  "It should not try to download the reports when an error happens fetching the associated jobs of the test run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ff448dc02b1408b0",
      "status" : "passed",
      "time" : {
        "start" : 1610724996280,
        "stop" : 1610724996283,
        "duration" : 3
      }
    } ]
  },
  "When deleting an Upload it should return a DeleteUploadResponse as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ded5add3e53e62c",
      "status" : "passed",
      "time" : {
        "start" : 1610725002901,
        "stop" : 1610725003260,
        "duration" : 359
      }
    } ]
  },
  "When creating a project in AWS device farm, if project name is empty an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b0b42a23312172ae",
      "status" : "passed",
      "time" : {
        "start" : 1610725001919,
        "stop" : 1610725002335,
        "duration" : 416
      }
    } ]
  },
  "When creating AWS device farm upload, project ARN is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f2a0ab9efb99fb90",
      "status" : "passed",
      "time" : {
        "start" : 1610725001251,
        "stop" : 1610725001578,
        "duration" : 327
      }
    } ]
  },
  "When an error happens, it should return the exception wrapped as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "28414f668ef83717",
      "status" : "passed",
      "time" : {
        "start" : 1610725003910,
        "stop" : 1610725003931,
        "duration" : 21
      }
    } ]
  },
  "When accessKeyId, secretAccessKey, session token and region name are provided, it should return a runner that uses a device farm client with basic credentials, the session token and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8e0146eba211988e",
      "status" : "passed",
      "time" : {
        "start" : 1610725003801,
        "stop" : 1610725003906,
        "duration" : 105
      }
    } ]
  },
  "It should return the executed run when the execution is completed" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "86ba9abd3a4a167a",
      "status" : "passed",
      "time" : {
        "start" : 1610724995385,
        "stop" : 1610724995667,
        "duration" : 282
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching current run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "be2b4e5ad27aac4e",
      "status" : "passed",
      "time" : {
        "start" : 1610724996045,
        "stop" : 1610724996084,
        "duration" : 39
      }
    } ]
  },
  "When no path is provided an Illegal Argument error should be returnes as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "37d96d854585f80b",
      "status" : "passed",
      "time" : {
        "start" : 1610724996201,
        "stop" : 1610724996223,
        "duration" : 22
      }
    } ]
  },
  "It should log an error message when downloading a report fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5d73bdfe40f49de",
      "status" : "passed",
      "time" : {
        "start" : 1610724996168,
        "stop" : 1610724996215,
        "duration" : 47
      }
    } ]
  },
  "It should delete uploads in parallel and keep deleting even if some operation fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fa4132a47372f347",
      "status" : "passed",
      "time" : {
        "start" : 1610724995817,
        "stop" : 1610724996024,
        "duration" : 207
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return an error as a left if upload ARN is empty" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6d7b8d2badcb3752",
      "status" : "passed",
      "time" : {
        "start" : 1610725002498,
        "stop" : 1610725002845,
        "duration" : 347
      }
    } ]
  },
  "When Android upload type is used, and file does not have .apk extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2b05a324817bc4e2",
      "status" : "passed",
      "time" : {
        "start" : 1610724995784,
        "stop" : 1610724995896,
        "duration" : 112
      }
    } ]
  },
  "When creating a project in AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "eb1cc2ac5329828c",
      "status" : "passed",
      "time" : {
        "start" : 1610725001583,
        "stop" : 1610725001759,
        "duration" : 176
      }
    } ]
  },
  "When running a test in device farm it should return the result" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "edd72606ff94b0af",
      "status" : "passed",
      "time" : {
        "start" : 1610724998712,
        "stop" : 1610724998744,
        "duration" : 32
      }
    } ]
  },
  "When scheduling a run, it should return the run as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3e314fab1a3822e0",
      "status" : "passed",
      "time" : {
        "start" : 1610724999920,
        "stop" : 1610725001221,
        "duration" : 1301
      }
    } ]
  },
  "When a run name is provided it should be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ec9c414007cdd128",
      "status" : "passed",
      "time" : {
        "start" : 1610725001251,
        "stop" : 1610725001570,
        "duration" : 319
      }
    } ]
  },
  "It should return the first found device pool as default when no name is provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f0777e66234055ff",
      "status" : "passed",
      "time" : {
        "start" : 1610724995385,
        "stop" : 1610724995481,
        "duration" : 96
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the run handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a3e84cf075bf2c0",
      "status" : "passed",
      "time" : {
        "start" : 1610724999279,
        "stop" : 1610724999299,
        "duration" : 20
      }
    } ]
  },
  "When Android upload type is used, file must end with .apk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7bcf8fa8a6d7a23",
      "status" : "passed",
      "time" : {
        "start" : 1610724995385,
        "stop" : 1610724995482,
        "duration" : 97
      }
    } ]
  },
  "It should return the upload, if its ready to be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fc814305c9c7c6b6",
      "status" : "passed",
      "time" : {
        "start" : 1610724995391,
        "stop" : 1610724995664,
        "duration" : 273
      }
    } ]
  },
  "When fetching the artifacts of a test execution any error should be returned as a DeviceFarmTractorError left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d574cb3a579972a1",
      "status" : "passed",
      "time" : {
        "start" : 1610725001249,
        "stop" : 1610725001573,
        "duration" : 324
      }
    } ]
  },
  "info messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "add7ffb26ed193cb",
      "status" : "passed",
      "time" : {
        "start" : 1610725001011,
        "stop" : 1610725001577,
        "duration" : 566
      }
    } ]
  },
  "When fetching a RUN it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "33f92b846eef664e",
      "status" : "passed",
      "time" : {
        "start" : 1610725002678,
        "stop" : 1610725002887,
        "duration" : 209
      }
    } ]
  },
  "When an error happens fetching the logger then error messages should be redirect to stderr" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "578e20f5fa9ddf51",
      "status" : "passed",
      "time" : {
        "start" : 1610725001745,
        "stop" : 1610725001893,
        "duration" : 148
      }
    } ]
  },
  "When accessKeyId and secretAccessKey are provided, it should return a runner that uses a device farm client with basic credentials" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6aaf2a1139c8cb29",
      "status" : "passed",
      "time" : {
        "start" : 1610725003539,
        "stop" : 1610725003551,
        "duration" : 12
      }
    } ]
  },
  "It should log an error message when creating the test report directory of an specific device fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e9ec7bf19ae5a975",
      "status" : "passed",
      "time" : {
        "start" : 1610724996257,
        "stop" : 1610724996267,
        "duration" : 10
      }
    } ]
  },
  "When running a test in device farm it should have APPIUM NODE as test type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a701486494ee055f",
      "status" : "passed",
      "time" : {
        "start" : 1610724998906,
        "stop" : 1610724998923,
        "duration" : 17
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b366d61a35f20e21",
      "status" : "passed",
      "time" : {
        "start" : 1610724999199,
        "stop" : 1610724999241,
        "duration" : 42
      }
    } ]
  },
  "When loading a file from a given path, if the files doesn't exists an error should be returned as a Left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "282d4899363e4eec",
      "status" : "passed",
      "time" : {
        "start" : 1610724996167,
        "stop" : 1610724996194,
        "duration" : 27
      }
    } ]
  },
  "When no run ARN is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ed57c0bf14a89190",
      "status" : "passed",
      "time" : {
        "start" : 1610725002888,
        "stop" : 1610725002955,
        "duration" : 67
      }
    } ]
  },
  "When fetching projects from AWS, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "27bee3aa2a15bab1",
      "status" : "passed",
      "time" : {
        "start" : 1610725001205,
        "stop" : 1610725001209,
        "duration" : 4
      }
    } ]
  },
  "When only accessKeyId is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2e19c292a61fff96",
      "status" : "passed",
      "time" : {
        "start" : 1610725003435,
        "stop" : 1610725003454,
        "duration" : 19
      }
    } ]
  },
  "When running a test in device farm it should try to delete the uploads of the execution by default" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "69f1caeeee4ff937",
      "status" : "passed",
      "time" : {
        "start" : 1610724999135,
        "stop" : 1610724999156,
        "duration" : 21
      }
    } ]
  },
  "It should wait until the execution completes" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fd36761520b10dd5",
      "status" : "passed",
      "time" : {
        "start" : 1610724995795,
        "stop" : 1610724996032,
        "duration" : 237
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler and the parallel upload process should be cancelled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "60722fd217e40a17",
      "status" : "passed",
      "time" : {
        "start" : 1610724999257,
        "stop" : 1610724999274,
        "duration" : 17
      }
    } ]
  },
  "When fetching the artifacts of a test execution if no run arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "98fc3a83be307c32",
      "status" : "passed",
      "time" : {
        "start" : 1610725001576,
        "stop" : 1610725001756,
        "duration" : 180
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when creating the upload fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5d5a3361a09b3c3d",
      "status" : "passed",
      "time" : {
        "start" : 1610724996341,
        "stop" : 1610724996353,
        "duration" : 12
      }
    } ]
  },
  "It should return the last DeviceFarmTractorError returned when fetching upload is still failing after the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8010d8845e98c8f8",
      "status" : "passed",
      "time" : {
        "start" : 1610724996110,
        "stop" : 1610724996210,
        "duration" : 100
      }
    } ]
  },
  "It should return an ErrorDownloadingArtifact when there is a problem saving the artifact on disk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5b4638f579485e18",
      "status" : "passed",
      "time" : {
        "start" : 1610724995791,
        "stop" : 1610724995937,
        "duration" : 146
      }
    } ]
  },
  "It should keep fetching upload status even if an error happens in a a retry" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d083acad6133fab8",
      "status" : "passed",
      "time" : {
        "start" : 1610724996308,
        "stop" : 1610724996338,
        "duration" : 30
      }
    } ]
  },
  "When fetching the artifacts of a test execution it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a30af9af387102c",
      "status" : "passed",
      "time" : {
        "start" : 1610724999918,
        "stop" : 1610725001187,
        "duration" : 1269
      }
    } ]
  },
  "When basic credentials and sessionToken are provided, it should return a runner that uses a device farm client with the basic credentials and session token" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1de78bf804453f0",
      "status" : "passed",
      "time" : {
        "start" : 1610725003569,
        "stop" : 1610725003579,
        "duration" : 10
      }
    } ]
  },
  "When no app arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "28d5a1216a5d5d8e",
      "status" : "passed",
      "time" : {
        "start" : 1610725001581,
        "stop" : 1610725001762,
        "duration" : 181
      }
    } ]
  },
  "When running a test in device farm if no run name is provided it should create the name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "231d4e79087fa438",
      "status" : "passed",
      "time" : {
        "start" : 1610724998998,
        "stop" : 1610724999085,
        "duration" : 87
      }
    } ]
  },
  "error messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a41f2549cbaeeafb",
      "status" : "passed",
      "time" : {
        "start" : 1610725002159,
        "stop" : 1610725002675,
        "duration" : 516
      }
    } ]
  },
  "When an error happens scheduling the run, it should return an ErrorSchedulingRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "72def54958e27af3",
      "status" : "passed",
      "time" : {
        "start" : 1610725002499,
        "stop" : 1610725002676,
        "duration" : 177
      }
    } ]
  },
  "When running a test in device farm by default the capture video configuration should be enabled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "532f7a714e173f53",
      "status" : "passed",
      "time" : {
        "start" : 1610724998862,
        "stop" : 1610724998883,
        "duration" : 21
      }
    } ]
  },
  "It should download all the reports associated to the test Run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1445c1470b7dc496",
      "status" : "passed",
      "time" : {
        "start" : 1610724996050,
        "stop" : 1610724996154,
        "duration" : 104
      }
    } ]
  },
  "When creating a runner without credentials and region, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8f7a05bd9d16764",
      "status" : "passed",
      "time" : {
        "start" : 1610725001066,
        "stop" : 1610725003392,
        "duration" : 2326
      }
    } ]
  },
  "When fetching an AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "223291a253c42c82",
      "status" : "passed",
      "time" : {
        "start" : 1610725002863,
        "stop" : 1610725002900,
        "duration" : 37
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when scheduling the run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "53f0959749fcf5a8",
      "status" : "passed",
      "time" : {
        "start" : 1610724996088,
        "stop" : 1610724996138,
        "duration" : 50
      }
    } ]
  },
  "When fetching device pools from AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "222046ca4914ff1e",
      "status" : "passed",
      "time" : {
        "start" : 1610725001921,
        "stop" : 1610725002335,
        "duration" : 414
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when uploading the artifact to s3 fails, no matters the upload status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ae23a5217559c720",
      "status" : "passed",
      "time" : {
        "start" : 1610724996213,
        "stop" : 1610724996303,
        "duration" : 90
      }
    } ]
  },
  "When creating AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2ab0c4eafc248e23",
      "status" : "passed",
      "time" : {
        "start" : 1610725001200,
        "stop" : 1610725001222,
        "duration" : 22
      }
    } ]
  },
  "It should return a project if its found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1e1940eb5b4c4e98",
      "status" : "passed",
      "time" : {
        "start" : 1610724995385,
        "stop" : 1610724995507,
        "duration" : 122
      }
    } ]
  },
  "When deleting an Upload if no arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ff6a98191956d32f",
      "status" : "passed",
      "time" : {
        "start" : 1610725003389,
        "stop" : 1610725003436,
        "duration" : 47
      }
    } ]
  },
  "It should return an UploadFailureError, if the upload status is not succeeded before the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e3eec330df209395",
      "status" : "passed",
      "time" : {
        "start" : 1610724996001,
        "stop" : 1610724996107,
        "duration" : 106
      }
    } ]
  },
  "When IOS upload type is used, file must end with .ipa" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e58c86bfc2a59258",
      "status" : "passed",
      "time" : {
        "start" : 1610724995902,
        "stop" : 1610724995923,
        "duration" : 21
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the devices pool handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "caa887f0193643d8",
      "status" : "passed",
      "time" : {
        "start" : 1610724999182,
        "stop" : 1610724999196,
        "duration" : 14
      }
    } ]
  },
  "It should return a DevicePoolNotFoundError when a device pool is not found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a3777f743635fa4f",
      "status" : "passed",
      "time" : {
        "start" : 1610724995939,
        "stop" : 1610724995943,
        "duration" : 4
      }
    } ]
  },
  "When running a test in device farm if the base test report directory path is empty it should not download the results" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "57a6be7c5d3ac84d",
      "status" : "passed",
      "time" : {
        "start" : 1610724999089,
        "stop" : 1610724999112,
        "duration" : 23
      }
    } ]
  },
  "When uploading artifact to S3, it should return a right when upload result has OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "418cb9f431fcd9c8",
      "status" : "passed",
      "time" : {
        "start" : 1610725001759,
        "stop" : 1610725001947,
        "duration" : 188
      }
    } ]
  },
  "When running a test in device farm the capture video configuration should be able to be specified" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e47655f84bff7885",
      "status" : "passed",
      "time" : {
        "start" : 1610724998886,
        "stop" : 1610724998903,
        "duration" : 17
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens fetching the associated device pools of the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d08b414b5ae6a47e",
      "status" : "passed",
      "time" : {
        "start" : 1610724995954,
        "stop" : 1610724995977,
        "duration" : 23
      }
    } ]
  },
  "When deleting an Upload any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "debdf44c11e090bb",
      "status" : "passed",
      "time" : {
        "start" : 1610725003294,
        "stop" : 1610725003333,
        "duration" : 39
      }
    } ]
  },
  "When uploading artifact to S3, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2d20925f5d98a760",
      "status" : "passed",
      "time" : {
        "start" : 1610725002007,
        "stop" : 1610725002019,
        "duration" : 12
      }
    } ]
  },
  "It should download all the reports even if any of them fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b71df2520383b1aa",
      "status" : "passed",
      "time" : {
        "start" : 1610724996218,
        "stop" : 1610724996254,
        "duration" : 36
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the projects handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3a06c7be4f2f37b3",
      "status" : "passed",
      "time" : {
        "start" : 1610724999159,
        "stop" : 1610724999179,
        "duration" : 20
      }
    } ]
  },
  "When running a test in device farm it should use the test project uploaded and the test spec provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a6efaf2602ce2951",
      "status" : "passed",
      "time" : {
        "start" : 1610724998926,
        "stop" : 1610724998968,
        "duration" : 42
      }
    } ]
  },
  "When running a test in device farm if the base test report directory is provided it should use it as a path" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5e69d87ac39335b2",
      "status" : "passed",
      "time" : {
        "start" : 1610724999115,
        "stop" : 1610724999132,
        "duration" : 17
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching artifacts fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "369a0f97a7065b9b",
      "status" : "passed",
      "time" : {
        "start" : 1610724996013,
        "stop" : 1610724996047,
        "duration" : 34
      }
    } ]
  },
  "When an error happens fetching the associated jobs of a Run then it should return a ErrorListingAssociatedJobs as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9ec4cf03a3fc7275",
      "status" : "passed",
      "time" : {
        "start" : 1610725003323,
        "stop" : 1610725003333,
        "duration" : 10
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, the file must have .zip extension" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ca39340ef02ef8a9",
      "status" : "passed",
      "time" : {
        "start" : 1610724996040,
        "stop" : 1610724996059,
        "duration" : 19
      }
    } ]
  },
  "It should return a NoRegisteredDevicePoolsError when there is no device pools associated to the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b57e494d10e3cc1b",
      "status" : "passed",
      "time" : {
        "start" : 1610724995899,
        "stop" : 1610724995931,
        "duration" : 32
      }
    } ]
  },
  "When only secretAccessKey is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "659f91544e139fc9",
      "status" : "passed",
      "time" : {
        "start" : 1610725003458,
        "stop" : 1610725003484,
        "duration" : 26
      }
    } ]
  },
  "It should delete all the provided uploads" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c0c81b7771a7ef67",
      "status" : "passed",
      "time" : {
        "start" : 1610724995391,
        "stop" : 1610724995666,
        "duration" : 275
      }
    } ]
  },
  "When creating a runner without credentials but with region, it should return a runner that uses a device farm client with default configuration but that use the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8d729f9954e85d4d",
      "status" : "passed",
      "time" : {
        "start" : 1610725003598,
        "stop" : 1610725003682,
        "duration" : 84
      }
    } ]
  },
  "When accessKeyId, secretAccessKey and region name are provided, it should return a runner that uses a device farm client with basic credentials and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f6bcaf04f76c0113",
      "status" : "passed",
      "time" : {
        "start" : 1610725003688,
        "stop" : 1610725003795,
        "duration" : 107
      }
    } ]
  },
  "When uploading artifact to S3, it should return a left when upload result has not OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e8dbec66e445a57",
      "status" : "passed",
      "time" : {
        "start" : 1610725001949,
        "stop" : 1610725001981,
        "duration" : 32
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, file must end with .yml" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e887c5d836abc412",
      "status" : "passed",
      "time" : {
        "start" : 1610724995961,
        "stop" : 1610724995969,
        "duration" : 8
      }
    } ]
  },
  "When an error happens fetching a run it should return a ErrorFetchingAWSRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "aaf7ecf7e743c918",
      "status" : "passed",
      "time" : {
        "start" : 1610725002957,
        "stop" : 1610725002967,
        "duration" : 10
      }
    } ]
  },
  "When unknown Upload type is used, an error should be returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2c44f9ce654b67a1",
      "status" : "passed",
      "time" : {
        "start" : 1610724996112,
        "stop" : 1610724996115,
        "duration" : 3
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return the upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1b74b7dbcf14416c",
      "status" : "passed",
      "time" : {
        "start" : 1610725002021,
        "stop" : 1610725002492,
        "duration" : 471
      }
    } ]
  },
  "When deleting an Upload if non-200 response is received then an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "96155c59fe1a43a5",
      "status" : "passed",
      "time" : {
        "start" : 1610725003353,
        "stop" : 1610725003383,
        "duration" : 30
      }
    } ]
  },
  "When creating a project in AWS device farm, it should return the created project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1891fc936fdd556",
      "status" : "passed",
      "time" : {
        "start" : 1610725001211,
        "stop" : 1610725001566,
        "duration" : 355
      }
    } ]
  },
  "It should download the customer artifact of a job execution" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "aa6184b7378bbd8d",
      "status" : "passed",
      "time" : {
        "start" : 1610724995386,
        "stop" : 1610724995677,
        "duration" : 291
      }
    } ]
  },
  "When no project arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6bba9d5f95b6fb",
      "status" : "passed",
      "time" : {
        "start" : 1610725002158,
        "stop" : 1610725002339,
        "duration" : 181
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when the artifact to upload doesn't exists" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "915168f5639b67df",
      "status" : "passed",
      "time" : {
        "start" : 1610724996384,
        "stop" : 1610724996404,
        "duration" : 20
      }
    } ]
  },
  "It should never try to delete when no uploads are provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "14fb14c6f960a8b8",
      "status" : "passed",
      "time" : {
        "start" : 1610724996045,
        "stop" : 1610724996202,
        "duration" : 157
      }
    } ]
  },
  "When running a test in device farm it should use the correct paths for the different upload types" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b582e4fbca62cf56",
      "status" : "passed",
      "time" : {
        "start" : 1610724998972,
        "stop" : 1610724998995,
        "duration" : 23
      }
    } ]
  },
  "It should return an UploadFailureError if the upload status is not succeeded" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d4da8b1629b51518",
      "status" : "passed",
      "time" : {
        "start" : 1610724995799,
        "stop" : 1610724995997,
        "duration" : 198
      }
    } ]
  },
  "When creating AWS device farm upload, artifact name is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e1217a7ea5864899",
      "status" : "passed",
      "time" : {
        "start" : 1610725001580,
        "stop" : 1610725001756,
        "duration" : 176
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens creating a new project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b3c9d5f9e2ae836c",
      "status" : "passed",
      "time" : {
        "start" : 1610724995912,
        "stop" : 1610724995964,
        "duration" : 52
      }
    } ]
  },
  "It should create the project if it is no found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4550f5dc16ef29e8",
      "status" : "passed",
      "time" : {
        "start" : 1610724995794,
        "stop" : 1610724995831,
        "duration" : 37
      }
    } ]
  },
  "When fetching device pools from AWS device farm, it should return the associated device pools of a given project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "93cd06d49a33812",
      "status" : "passed",
      "time" : {
        "start" : 1610724999920,
        "stop" : 1610725001578,
        "duration" : 1658
      }
    } ]
  },
  "When no device pool arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1433c7330b3e0e9e",
      "status" : "passed",
      "time" : {
        "start" : 1610725001815,
        "stop" : 1610725002156,
        "duration" : 341
      }
    } ]
  },
  "When fetching projects from AWS, it should return the project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a16d9d4f9bce808",
      "status" : "passed",
      "time" : {
        "start" : 1610724999924,
        "stop" : 1610725001203,
        "duration" : 1279
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, and file does not have .zip extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "793534b4961aaa2",
      "status" : "passed",
      "time" : {
        "start" : 1610724996063,
        "stop" : 1610724996109,
        "duration" : 46
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, and file does not have .yml extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c8cff91a1f840390",
      "status" : "passed",
      "time" : {
        "start" : 1610724995981,
        "stop" : 1610724996016,
        "duration" : 35
      }
    } ]
  },
  "When fetching all the jobs associated to a Run it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bbfb4cd344114690",
      "status" : "passed",
      "time" : {
        "start" : 1610725002968,
        "stop" : 1610725003302,
        "duration" : 334
      }
    } ]
  },
  "It should not fail if there is no customer artifacts to download" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "826e350c94db3a40",
      "status" : "passed",
      "time" : {
        "start" : 1610724995940,
        "stop" : 1610724996008,
        "duration" : 68
      }
    } ]
  },
  "It should return a DeviceFarmIllegalArtifactExtension when the upload file doesn't satisfy the upload type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d490056076b4f51c",
      "status" : "passed",
      "time" : {
        "start" : 1610724996356,
        "stop" : 1610724996381,
        "duration" : 25
      }
    } ]
  },
  "When creating AWS device farm upload, tt should return the created AWS Upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ec8fe5c5eaaf4412",
      "status" : "passed",
      "time" : {
        "start" : 1610724999922,
        "stop" : 1610725001186,
        "duration" : 1264
      }
    } ]
  },
  "It should log an error message when creating the test reports directory fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "209aec558d67c3ef",
      "status" : "passed",
      "time" : {
        "start" : 1610724996272,
        "stop" : 1610724996276,
        "duration" : 4
      }
    } ]
  },
  "When loading a file from a given path, it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "63c6a31370b889da",
      "status" : "passed",
      "time" : {
        "start" : 1610724996118,
        "stop" : 1610724996164,
        "duration" : 46
      }
    } ]
  }
}