{
  "It should return a DeviceFarmTractorError if something happens fetching device farm projects" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f558483b531c47",
      "status" : "passed",
      "time" : {
        "start" : 1610681866333,
        "stop" : 1610681866362,
        "duration" : 29
      }
    } ]
  },
  "When IOS upload type is used, and file does not have .ipa extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3c5e72c45367dbd1",
      "status" : "passed",
      "time" : {
        "start" : 1610681866371,
        "stop" : 1610681866414,
        "duration" : 43
      }
    } ]
  },
  "When running a test in device farm it should use the correct Project ARN in the process" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a93bd84959c8e573",
      "status" : "passed",
      "time" : {
        "start" : 1610681869262,
        "stop" : 1610681869349,
        "duration" : 87
      }
    } ]
  },
  "It should return the device pool that has the provided name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a4f99d661e6b6dd4",
      "status" : "passed",
      "time" : {
        "start" : 1610681866227,
        "stop" : 1610681866243,
        "duration" : 16
      }
    } ]
  },
  "When fetching device pools from AWS device farm, project ARN is mandatory, a left should be returned if it is not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ae2e7e1119590623",
      "status" : "passed",
      "time" : {
        "start" : 1610681870930,
        "stop" : 1610681870945,
        "duration" : 15
      }
    } ]
  },
  "When an error happens fetching the logger then info messages should be redirect to stdout" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "23a6130310ce6671",
      "status" : "passed",
      "time" : {
        "start" : 1610681867156,
        "stop" : 1610681870675,
        "duration" : 3519
      }
    } ]
  },
  "When sessionToken is provided but no credentials, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "3b7841addcea0798",
      "status" : "passed",
      "time" : {
        "start" : 1610681872504,
        "stop" : 1610681872516,
        "duration" : 12
      }
    } ]
  },
  "It should not try to download the reports when an error happens fetching the associated jobs of the test run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c9f1e4cc82977f50",
      "status" : "passed",
      "time" : {
        "start" : 1610681866713,
        "stop" : 1610681866727,
        "duration" : 14
      }
    } ]
  },
  "When creating a project in AWS device farm, if project name is empty an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ca363d30f2f8d1df",
      "status" : "passed",
      "time" : {
        "start" : 1610681871815,
        "stop" : 1610681871934,
        "duration" : 119
      }
    } ]
  },
  "When deleting an Upload it should return a DeleteUploadResponse as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "62c91fff73dac765",
      "status" : "passed",
      "time" : {
        "start" : 1610681871954,
        "stop" : 1610681872165,
        "duration" : 211
      }
    } ]
  },
  "When creating AWS device farm upload, project ARN is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cd8cbebecf757344",
      "status" : "passed",
      "time" : {
        "start" : 1610681870698,
        "stop" : 1610681870930,
        "duration" : 232
      }
    } ]
  },
  "When an error happens, it should return the exception wrapped as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f2ea44b03de0d83d",
      "status" : "passed",
      "time" : {
        "start" : 1610681872684,
        "stop" : 1610681872717,
        "duration" : 33
      }
    } ]
  },
  "When accessKeyId, secretAccessKey, session token and region name are provided, it should return a runner that uses a device farm client with basic credentials, the session token and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "359deab5e908d79e",
      "status" : "passed",
      "time" : {
        "start" : 1610681872651,
        "stop" : 1610681872681,
        "duration" : 30
      }
    } ]
  },
  "It should return the executed run when the execution is completed" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "335c3af08c28ae5c",
      "status" : "passed",
      "time" : {
        "start" : 1610681865871,
        "stop" : 1610681866133,
        "duration" : 262
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching current run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "344792ee4ee9cccd",
      "status" : "passed",
      "time" : {
        "start" : 1610681866427,
        "stop" : 1610681866455,
        "duration" : 28
      }
    } ]
  },
  "When no path is provided an Illegal Argument error should be returnes as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8be5a8b75fa156c9",
      "status" : "passed",
      "time" : {
        "start" : 1610681866652,
        "stop" : 1610681866678,
        "duration" : 26
      }
    } ]
  },
  "It should log an error message when downloading a report fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "29a36634ad24e5c9",
      "status" : "passed",
      "time" : {
        "start" : 1610681866476,
        "stop" : 1610681866512,
        "duration" : 36
      }
    } ]
  },
  "It should delete uploads in parallel and keep deleting even if some operation fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "946d12256aecf698",
      "status" : "passed",
      "time" : {
        "start" : 1610681866220,
        "stop" : 1610681866345,
        "duration" : 125
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return an error as a left if upload ARN is empty" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "355dfd23a036243d",
      "status" : "passed",
      "time" : {
        "start" : 1610681871816,
        "stop" : 1610681871933,
        "duration" : 117
      }
    } ]
  },
  "When Android upload type is used, and file does not have .apk extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "989c425961caeb03",
      "status" : "passed",
      "time" : {
        "start" : 1610681866218,
        "stop" : 1610681866336,
        "duration" : 118
      }
    } ]
  },
  "When creating a project in AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4dea3ddfd9a081a6",
      "status" : "passed",
      "time" : {
        "start" : 1610681871409,
        "stop" : 1610681871803,
        "duration" : 394
      }
    } ]
  },
  "When running a test in device farm it should return the result" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "907a8da13357becd",
      "status" : "passed",
      "time" : {
        "start" : 1610681869186,
        "stop" : 1610681869254,
        "duration" : 68
      }
    } ]
  },
  "When scheduling a run, it should return the run as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9be4d1fac6fbf4a5",
      "status" : "passed",
      "time" : {
        "start" : 1610681869848,
        "stop" : 1610681870542,
        "duration" : 694
      }
    } ]
  },
  "When a run name is provided it should be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "87936b82673cd191",
      "status" : "passed",
      "time" : {
        "start" : 1610681870544,
        "stop" : 1610681870677,
        "duration" : 133
      }
    } ]
  },
  "It should return the first found device pool as default when no name is provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c9d0b350acabda62",
      "status" : "passed",
      "time" : {
        "start" : 1610681865873,
        "stop" : 1610681866010,
        "duration" : 137
      }
    } ]
  },
  "When Android upload type is used, file must end with .apk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1679716796f10c30",
      "status" : "passed",
      "time" : {
        "start" : 1610681865861,
        "stop" : 1610681866003,
        "duration" : 142
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the run handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7b27b2cf65f2573b",
      "status" : "passed",
      "time" : {
        "start" : 1610681871252,
        "stop" : 1610681871334,
        "duration" : 82
      }
    } ]
  },
  "It should return the upload, if its ready to be used" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4424e3c81f5a6aee",
      "status" : "passed",
      "time" : {
        "start" : 1610681865861,
        "stop" : 1610681866118,
        "duration" : 257
      }
    } ]
  },
  "When fetching the artifacts of a test execution any error should be returned as a DeviceFarmTractorError left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "207d803f11d28edf",
      "status" : "passed",
      "time" : {
        "start" : 1610681870926,
        "stop" : 1610681871232,
        "duration" : 306
      }
    } ]
  },
  "info messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e64bb7551c183f3d",
      "status" : "passed",
      "time" : {
        "start" : 1610681870923,
        "stop" : 1610681871100,
        "duration" : 177
      }
    } ]
  },
  "When fetching a RUN it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b6f9075c6f8047c4",
      "status" : "passed",
      "time" : {
        "start" : 1610681871415,
        "stop" : 1610681871806,
        "duration" : 391
      }
    } ]
  },
  "When an error happens fetching the logger then error messages should be redirect to stderr" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4921f4badc17d470",
      "status" : "passed",
      "time" : {
        "start" : 1610681871232,
        "stop" : 1610681871475,
        "duration" : 243
      }
    } ]
  },
  "When accessKeyId and secretAccessKey are provided, it should return a runner that uses a device farm client with basic credentials" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6ffc0a8c39816624",
      "status" : "passed",
      "time" : {
        "start" : 1610681872520,
        "stop" : 1610681872548,
        "duration" : 28
      }
    } ]
  },
  "It should log an error message when creating the test report directory of an specific device fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9f4bcf3782794dc4",
      "status" : "passed",
      "time" : {
        "start" : 1610681866671,
        "stop" : 1610681866689,
        "duration" : 18
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "49b530f1e0e831a",
      "status" : "passed",
      "time" : {
        "start" : 1610681870936,
        "stop" : 1610681871145,
        "duration" : 209
      }
    } ]
  },
  "When running a test in device farm it should have APPIUM NODE as test type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b2b938a19b00abe2",
      "status" : "passed",
      "time" : {
        "start" : 1610681869441,
        "stop" : 1610681869839,
        "duration" : 398
      }
    } ]
  },
  "When loading a file from a given path, if the files doesn't exists an error should be returned as a Left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "473172cf411440dc",
      "status" : "passed",
      "time" : {
        "start" : 1610681866626,
        "stop" : 1610681866649,
        "duration" : 23
      }
    } ]
  },
  "When no run ARN is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8f9d660a60b2526d",
      "status" : "passed",
      "time" : {
        "start" : 1610681871814,
        "stop" : 1610681871936,
        "duration" : 122
      }
    } ]
  },
  "When fetching projects from AWS, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cbced7cfaa417339",
      "status" : "passed",
      "time" : {
        "start" : 1610681870922,
        "stop" : 1610681870987,
        "duration" : 65
      }
    } ]
  },
  "When only accessKeyId is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "e08ee5673ad0e163",
      "status" : "passed",
      "time" : {
        "start" : 1610681872424,
        "stop" : 1610681872447,
        "duration" : 23
      }
    } ]
  },
  "When running a test in device farm it should try to delete the uploads of the execution by default" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a31494756dda9391",
      "status" : "passed",
      "time" : {
        "start" : 1610681870697,
        "stop" : 1610681870705,
        "duration" : 8
      }
    } ]
  },
  "It should wait until the execution completes" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f55215a6ba4236d7",
      "status" : "passed",
      "time" : {
        "start" : 1610681866215,
        "stop" : 1610681866424,
        "duration" : 209
      }
    } ]
  },
  "When fetching the artifacts of a test execution if no run arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "b83f5419ca60ceb",
      "status" : "passed",
      "time" : {
        "start" : 1610681871236,
        "stop" : 1610681871334,
        "duration" : 98
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when creating the upload fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5eaf3eef795b344a",
      "status" : "passed",
      "time" : {
        "start" : 1610681866773,
        "stop" : 1610681866777,
        "duration" : 4
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the upload artifacts handler and the parallel upload process should be cancelled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4242aabf6a20179e",
      "status" : "passed",
      "time" : {
        "start" : 1610681871166,
        "stop" : 1610681871250,
        "duration" : 84
      }
    } ]
  },
  "It should return the last DeviceFarmTractorError returned when fetching upload is still failing after the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d707e28e3018f499",
      "status" : "passed",
      "time" : {
        "start" : 1610681866473,
        "stop" : 1610681866508,
        "duration" : 35
      }
    } ]
  },
  "It should return an ErrorDownloadingArtifact when there is a problem saving the artifact on disk" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "5309f9048803da0a",
      "status" : "passed",
      "time" : {
        "start" : 1610681866238,
        "stop" : 1610681866351,
        "duration" : 113
      }
    } ]
  },
  "When fetching the artifacts of a test execution it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "826a788bb2b24dd6",
      "status" : "passed",
      "time" : {
        "start" : 1610681869846,
        "stop" : 1610681870917,
        "duration" : 1071
      }
    } ]
  },
  "It should keep fetching upload status even if an error happens in a a retry" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "28c770bd4beb2acb",
      "status" : "passed",
      "time" : {
        "start" : 1610681866721,
        "stop" : 1610681866771,
        "duration" : 50
      }
    } ]
  },
  "When basic credentials and sessionToken are provided, it should return a runner that uses a device farm client with the basic credentials and session token" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8e8407a241ac647d",
      "status" : "passed",
      "time" : {
        "start" : 1610681872562,
        "stop" : 1610681872574,
        "duration" : 12
      }
    } ]
  },
  "When no app arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a6aa2087823a2cdd",
      "status" : "passed",
      "time" : {
        "start" : 1610681870678,
        "stop" : 1610681870932,
        "duration" : 254
      }
    } ]
  },
  "When running a test in device farm if no run name is provided it should create the name" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2775c98a394a4dd8",
      "status" : "passed",
      "time" : {
        "start" : 1610681869955,
        "stop" : 1610681870170,
        "duration" : 215
      }
    } ]
  },
  "error messages should be logged using Kotlin Logging lib" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bb72b2910b280858",
      "status" : "passed",
      "time" : {
        "start" : 1610681871802,
        "stop" : 1610681872063,
        "duration" : 261
      }
    } ]
  },
  "When an error happens scheduling the run, it should return an ErrorSchedulingRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1bcdb8b86163e90c",
      "status" : "passed",
      "time" : {
        "start" : 1610681871124,
        "stop" : 1610681871371,
        "duration" : 247
      }
    } ]
  },
  "When running a test in device farm by default the capture video configuration should be enabled" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1eed15886243463c",
      "status" : "passed",
      "time" : {
        "start" : 1610681869351,
        "stop" : 1610681869401,
        "duration" : 50
      }
    } ]
  },
  "It should download all the reports associated to the test Run" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1b668a36e422be51",
      "status" : "passed",
      "time" : {
        "start" : 1610681866420,
        "stop" : 1610681866470,
        "duration" : 50
      }
    } ]
  },
  "When fetching an AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fc297e40b927047e",
      "status" : "passed",
      "time" : {
        "start" : 1610681871935,
        "stop" : 1610681871952,
        "duration" : 17
      }
    } ]
  },
  "When creating a runner without credentials and region, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "2419a8bf9014899d",
      "status" : "passed",
      "time" : {
        "start" : 1610681869867,
        "stop" : 1610681872388,
        "duration" : 2521
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when scheduling the run fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "10f0479751269bfd",
      "status" : "passed",
      "time" : {
        "start" : 1610681866472,
        "stop" : 1610681866498,
        "duration" : 26
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when uploading the artifact to s3 fails, no matters the upload status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c8a8231de17bed58",
      "status" : "passed",
      "time" : {
        "start" : 1610681866511,
        "stop" : 1610681866719,
        "duration" : 208
      }
    } ]
  },
  "When fetching device pools from AWS device farm, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "4b5d2e6284205aee",
      "status" : "passed",
      "time" : {
        "start" : 1610681870949,
        "stop" : 1610681871334,
        "duration" : 385
      }
    } ]
  },
  "It should return a project if its found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ef957b40b640a4c8",
      "status" : "passed",
      "time" : {
        "start" : 1610681865868,
        "stop" : 1610681865995,
        "duration" : 127
      }
    } ]
  },
  "When creating AWS device farm upload, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "8b9ff006f2169073",
      "status" : "passed",
      "time" : {
        "start" : 1610681870582,
        "stop" : 1610681870684,
        "duration" : 102
      }
    } ]
  },
  "It should return an UploadFailureError, if the upload status is not succeeded before the maximum number of retries" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "77e3dcbf3a6a3e91",
      "status" : "passed",
      "time" : {
        "start" : 1610681866350,
        "stop" : 1610681866455,
        "duration" : 105
      }
    } ]
  },
  "When deleting an Upload if no arn is provided a DeviceFarmTractorErrorIllegalArgumentException should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "bbcd732846b41f61",
      "status" : "passed",
      "time" : {
        "start" : 1610681872425,
        "stop" : 1610681872437,
        "duration" : 12
      }
    } ]
  },
  "When IOS upload type is used, file must end with .ipa" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "19b9bc6c89146c06",
      "status" : "passed",
      "time" : {
        "start" : 1610681866339,
        "stop" : 1610681866367,
        "duration" : 28
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the devices pool handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cff3dfaeddd04fb6",
      "status" : "passed",
      "time" : {
        "start" : 1610681870924,
        "stop" : 1610681870934,
        "duration" : 10
      }
    } ]
  },
  "It should return a DevicePoolNotFoundError when a device pool is not found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "12b94e726e890070",
      "status" : "passed",
      "time" : {
        "start" : 1610681866354,
        "stop" : 1610681866387,
        "duration" : 33
      }
    } ]
  },
  "When running a test in device farm if the base test report directory path is empty it should not download the results" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "db70487a96876e68",
      "status" : "passed",
      "time" : {
        "start" : 1610681870172,
        "stop" : 1610681870539,
        "duration" : 367
      }
    } ]
  },
  "When uploading artifact to S3, it should return a right when upload result has OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "a194853494afff8b",
      "status" : "passed",
      "time" : {
        "start" : 1610681871003,
        "stop" : 1610681871235,
        "duration" : 232
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens fetching the associated device pools of the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "46eb034ccb06f356",
      "status" : "passed",
      "time" : {
        "start" : 1610681866392,
        "stop" : 1610681866405,
        "duration" : 13
      }
    } ]
  },
  "When running a test in device farm the capture video configuration should be able to be specified" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "858679aa001b36a4",
      "status" : "passed",
      "time" : {
        "start" : 1610681869406,
        "stop" : 1610681869439,
        "duration" : 33
      }
    } ]
  },
  "When deleting an Upload any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1245f7e143c196e4",
      "status" : "passed",
      "time" : {
        "start" : 1610681872176,
        "stop" : 1610681872362,
        "duration" : 186
      }
    } ]
  },
  "When uploading artifact to S3, any error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fe29d1465d0b4d24",
      "status" : "passed",
      "time" : {
        "start" : 1610681871281,
        "stop" : 1610681871368,
        "duration" : 87
      }
    } ]
  },
  "It should download all the reports even if any of them fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "20563933a84744e5",
      "status" : "passed",
      "time" : {
        "start" : 1610681866515,
        "stop" : 1610681866665,
        "duration" : 150
      }
    } ]
  },
  "When running a test in device farm it should throw an error if a left is returner by the projects handler" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ea894d06538bc277",
      "status" : "passed",
      "time" : {
        "start" : 1610681870732,
        "stop" : 1610681870921,
        "duration" : 189
      }
    } ]
  },
  "When running a test in device farm if the base test report directory is provided it should use it as a path" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ecdc143dc544732c",
      "status" : "passed",
      "time" : {
        "start" : 1610681870582,
        "stop" : 1610681870695,
        "duration" : 113
      }
    } ]
  },
  "When running a test in device farm it should use the test project uploaded and the test spec provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "72832f6b66a573f3",
      "status" : "passed",
      "time" : {
        "start" : 1610681869842,
        "stop" : 1610681869917,
        "duration" : 75
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when fetching artifacts fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ee2f6bca4ac35956",
      "status" : "passed",
      "time" : {
        "start" : 1610681866382,
        "stop" : 1610681866412,
        "duration" : 30
      }
    } ]
  },
  "When an error happens fetching the associated jobs of a Run then it should return a ErrorListingAssociatedJobs as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "24cf3f0beb09e9ad",
      "status" : "passed",
      "time" : {
        "start" : 1610681872368,
        "stop" : 1610681872427,
        "duration" : 59
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, the file must have .zip extension" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fe49f4483b33d744",
      "status" : "passed",
      "time" : {
        "start" : 1610681866475,
        "stop" : 1610681866483,
        "duration" : 8
      }
    } ]
  },
  "It should return a NoRegisteredDevicePoolsError when there is no device pools associated to the project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "c234be33ed6ef9ec",
      "status" : "passed",
      "time" : {
        "start" : 1610681866248,
        "stop" : 1610681866351,
        "duration" : 103
      }
    } ]
  },
  "When only secretAccessKey is provided, it should return a runner that uses a device farm client with default configuration" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1265427d9e1c7d89",
      "status" : "passed",
      "time" : {
        "start" : 1610681872471,
        "stop" : 1610681872501,
        "duration" : 30
      }
    } ]
  },
  "It should delete all the provided uploads" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "eb75328e3eed4284",
      "status" : "passed",
      "time" : {
        "start" : 1610681865861,
        "stop" : 1610681866138,
        "duration" : 277
      }
    } ]
  },
  "When creating a runner without credentials but with region, it should return a runner that uses a device farm client with default configuration but that use the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "fb77e314bb0030e1",
      "status" : "passed",
      "time" : {
        "start" : 1610681872594,
        "stop" : 1610681872630,
        "duration" : 36
      }
    } ]
  },
  "When accessKeyId, secretAccessKey and region name are provided, it should return a runner that uses a device farm client with basic credentials and the provided region" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9bc16fc8d1dd7856",
      "status" : "passed",
      "time" : {
        "start" : 1610681872637,
        "stop" : 1610681872647,
        "duration" : 10
      }
    } ]
  },
  "When uploading artifact to S3, it should return a left when upload result has not OK status" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "da4b2ad4e7dcf0f6",
      "status" : "passed",
      "time" : {
        "start" : 1610681871248,
        "stop" : 1610681871279,
        "duration" : 31
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, file must end with .yml" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9d8781cba4a71265",
      "status" : "passed",
      "time" : {
        "start" : 1610681866419,
        "stop" : 1610681866442,
        "duration" : 23
      }
    } ]
  },
  "When an error happens fetching a run it should return a ErrorFetchingAWSRun as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9856f02fe192506e",
      "status" : "passed",
      "time" : {
        "start" : 1610681871938,
        "stop" : 1610681872150,
        "duration" : 212
      }
    } ]
  },
  "When unknown Upload type is used, an error should be returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "423bfbcfb4207ea0",
      "status" : "passed",
      "time" : {
        "start" : 1610681866508,
        "stop" : 1610681866517,
        "duration" : 9
      }
    } ]
  },
  "When fetching an AWS device farm upload, it should return the upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9507256402e7854",
      "status" : "passed",
      "time" : {
        "start" : 1610681871413,
        "stop" : 1610681871803,
        "duration" : 390
      }
    } ]
  },
  "When deleting an Upload if non-200 response is received then an error should be returned as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f793781f3107ba34",
      "status" : "passed",
      "time" : {
        "start" : 1610681872377,
        "stop" : 1610681872396,
        "duration" : 19
      }
    } ]
  },
  "When creating a project in AWS device farm, it should return the created project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ff48b13d70722b01",
      "status" : "passed",
      "time" : {
        "start" : 1610681870989,
        "stop" : 1610681871375,
        "duration" : 386
      }
    } ]
  },
  "It should download the customer artifact of a job execution" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "1427a5f03c4c2154",
      "status" : "passed",
      "time" : {
        "start" : 1610681865859,
        "stop" : 1610681866190,
        "duration" : 331
      }
    } ]
  },
  "It should return a DeviceFarmTractorError when the artifact to upload doesn't exists" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "f8b85b5ac4e16b0d",
      "status" : "passed",
      "time" : {
        "start" : 1610681866798,
        "stop" : 1610681866801,
        "duration" : 3
      }
    } ]
  },
  "When no project arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "79666c2577a7996a",
      "status" : "passed",
      "time" : {
        "start" : 1610681871013,
        "stop" : 1610681871123,
        "duration" : 110
      }
    } ]
  },
  "It should never try to delete when no uploads are provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ba1f0c11c4944316",
      "status" : "passed",
      "time" : {
        "start" : 1610681866347,
        "stop" : 1610681866396,
        "duration" : 49
      }
    } ]
  },
  "When running a test in device farm it should use the correct paths for the different upload types" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "64bc5963865ef03a",
      "status" : "passed",
      "time" : {
        "start" : 1610681869919,
        "stop" : 1610681869953,
        "duration" : 34
      }
    } ]
  },
  "When creating AWS device farm upload, artifact name is mandatory, a left should be returned if not provided" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ea69d9a4701a20a2",
      "status" : "passed",
      "time" : {
        "start" : 1610681870932,
        "stop" : 1610681871001,
        "duration" : 69
      }
    } ]
  },
  "It should return an UploadFailureError if the upload status is not succeeded" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "73fb9c55d9377c8d",
      "status" : "passed",
      "time" : {
        "start" : 1610681866239,
        "stop" : 1610681866341,
        "duration" : 102
      }
    } ]
  },
  "It should return a DeviceFarmTractorError if something happens creating a new project" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "94da3f00e279ca84",
      "status" : "passed",
      "time" : {
        "start" : 1610681866365,
        "stop" : 1610681866429,
        "duration" : 64
      }
    } ]
  },
  "It should create the project if it is no found" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "813bcc3791316ef9",
      "status" : "passed",
      "time" : {
        "start" : 1610681866224,
        "stop" : 1610681866320,
        "duration" : 96
      }
    } ]
  },
  "When fetching device pools from AWS device farm, it should return the associated device pools of a given project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "ffd3ca26c8130160",
      "status" : "passed",
      "time" : {
        "start" : 1610681869387,
        "stop" : 1610681870914,
        "duration" : 1527
      }
    } ]
  },
  "When no device pool arn is provided it should return a DeviceFarmTractorErrorIllegalArgumentException as a left" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "9f5548b224cd77b5",
      "status" : "passed",
      "time" : {
        "start" : 1610681870934,
        "stop" : 1610681871010,
        "duration" : 76
      }
    } ]
  },
  "When fetching projects from AWS, it should return the project as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "d50ce7999af7f29c",
      "status" : "passed",
      "time" : {
        "start" : 1610681869848,
        "stop" : 1610681870909,
        "duration" : 1061
      }
    } ]
  },
  "When Upload type is not Android,IOS or Appium, and file does not have .zip extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "81c4021cdfa949e5",
      "status" : "passed",
      "time" : {
        "start" : 1610681866485,
        "stop" : 1610681866500,
        "duration" : 15
      }
    } ]
  },
  "When Appium Node Test Spec upload type is used, and file does not have .yml extension an error is returned" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "7ac3165a89c5672b",
      "status" : "passed",
      "time" : {
        "start" : 1610681866444,
        "stop" : 1610681866467,
        "duration" : 23
      }
    } ]
  },
  "When fetching all the jobs associated to a Run it should return them as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "664e3ebf922db6fc",
      "status" : "passed",
      "time" : {
        "start" : 1610681872161,
        "stop" : 1610681872363,
        "duration" : 202
      }
    } ]
  },
  "It should not fail if there is no customer artifacts to download" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "94fa307ffa7f291d",
      "status" : "passed",
      "time" : {
        "start" : 1610681866354,
        "stop" : 1610681866378,
        "duration" : 24
      }
    } ]
  },
  "It should return a DeviceFarmIllegalArtifactExtension when the upload file doesn't satisfy the upload type" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "68e376d0cefe9357",
      "status" : "passed",
      "time" : {
        "start" : 1610681866779,
        "stop" : 1610681866795,
        "duration" : 16
      }
    } ]
  },
  "When creating AWS device farm upload, tt should return the created AWS Upload as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6e0cedd9501ef0ad",
      "status" : "passed",
      "time" : {
        "start" : 1610681869842,
        "stop" : 1610681870580,
        "duration" : 738
      }
    } ]
  },
  "It should log an error message when creating the test reports directory fails" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "6565d301ccf59a79",
      "status" : "passed",
      "time" : {
        "start" : 1610681866692,
        "stop" : 1610681866705,
        "duration" : 13
      }
    } ]
  },
  "When loading a file from a given path, it should return it as a right" : {
    "statistic" : {
      "failed" : 0,
      "broken" : 0,
      "skipped" : 0,
      "passed" : 1,
      "unknown" : 0,
      "total" : 1
    },
    "items" : [ {
      "uid" : "cbb37d4be70c9971",
      "status" : "passed",
      "time" : {
        "start" : 1610681866522,
        "stop" : 1610681866623,
        "duration" : 101
      }
    } ]
  }
}